{"version":3,"sources":["webpack:///src/app/customers/add/add.page.html","webpack:///src/app/customers/add/add-routing.module.ts","webpack:///src/app/customers/add/add.module.ts","webpack:///src/app/customers/add/add.page.scss","webpack:///src/app/customers/add/add.page.ts"],"names":["routes","path","component","AddPageRoutingModule","imports","forChild","exports","AddPageModule","declarations","AddPage","router","navCtrl","statusBar","formBuilder","apiService","api","plt","cust_fb","ready","then","countryData","NetworkStatus","show","styleDefault","backgroundColorByHexString","refresh","refresher","presentLoading","allApi","pipe","API_TIMEOUT","subscribe","res","statelist","data","state","country","countries","selectedcountry","target","complete","dismissLoading","err","presentToastWithOptions","back","e","filter","x","country_id","detail","value","currency","id","country_name","currency_code","console","log","custData","patchValue","currency_name","group","name","required","email","phone","address","city","postal_code","cus_number","vat_code","v","controls","markAsTouched","valid","body","businessId","getBusinessId","Post","customer_process","status","navigate","selector","template"],"mappings":"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","file":"customers-add-add-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>New Customer</ion-title>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-button (click)=\\\"goBack()\\\">\\n        <ion-icon name=\\\"arrow-back\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n\\n  <form [formGroup]=\\\"custData\\\" class=\\\"form_\\\">\\n\\n    <ion-item no-padding lines=\\\"none\\\" class=\\\"items_ shadow_input\\\">\\n      <ion-input type=\\\"text\\\" placeholder=\\\"Customer Name\\\" formControlName=\\\"name\\\" class=\\\"input_\\\"></ion-input>\\n    </ion-item>\\n\\n    <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\n      *ngIf=\\\"custData.controls.name.hasError('required') && custData.controls.name.touched\\\">\\n      <p class=\\\"content\\\">Please Enter Customer Name!</p>\\n    </ion-item>\\n\\n    <ion-item no-padding lines=\\\"none\\\" class=\\\"items_ shadow_input\\\">\\n      <ion-input type=\\\"email\\\" placeholder=\\\"Email\\\" formControlName=\\\"email\\\" class=\\\"input_\\\"></ion-input>\\n    </ion-item>\\n\\n    <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\n      *ngIf=\\\"custData.controls.email.hasError('required') && custData.controls.email.touched\\\">\\n      <p class=\\\"content\\\">Please Enter Email!</p>\\n    </ion-item>\\n\\n    <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\n      *ngIf=\\\"custData.controls.email.hasError('pattern') && custData.controls.email.touched\\\">\\n      <p class=\\\"content\\\">Please Enter Valid Email!</p>\\n    </ion-item>\\n\\n    <ion-item no-padding lines=\\\"none\\\" class=\\\"items_ shadow_input\\\">\\n      <ion-input type=\\\"tel\\\" placeholder=\\\"Phone Number\\\" formControlName=\\\"phone\\\" class=\\\"input_\\\">\\n      </ion-input>\\n    </ion-item>\\n\\n    <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\n      *ngIf=\\\"custData.controls.phone.hasError('required') && custData.controls.phone.touched\\\">\\n      <p class=\\\"content\\\">Please Enter Phone number!</p>\\n    </ion-item>\\n\\n    <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\n      *ngIf=\\\"!custData.get('phone').errors?.pattern && custData.get('phone').errors?.minlength && custData.get('phone').touched\\\">\\n      <p class=\\\"content\\\">Please Enter Valid Phone number!</p>\\n    </ion-item>\\n\\n    <ion-item no-padding lines=\\\"none\\\" class=\\\"items_ shadow_input\\\">\\n      <ion-input type=\\\"text\\\" placeholder=\\\"Address\\\" formControlName=\\\"address\\\" class=\\\"input_\\\"></ion-input>\\n    </ion-item>\\n\\n    <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\n      *ngIf=\\\"custData.controls.address.hasError('required') && custData.controls.address.touched\\\">\\n      <p class=\\\"content\\\">Please Enter Address!</p>\\n    </ion-item>\\n\\n    <ion-item no-padding lines=\\\"none\\\" class=\\\"items_ shadow_input\\\">\\n      <ion-select interface=\\\"action-sheet\\\" placeholder=\\\"Country\\\" formControlName=\\\"country\\\" class=\\\"dropWidth_\\\" mode=\\\"md\\\"\\n        (ionChange)=\\\"stateList($event)\\\" [(ngModel)]=\\\"selectedcountry\\\">\\n        <ion-select-option *ngFor=\\\"let opt of country\\\" [value]=\\\"opt.id\\\">{{opt.name | uppercase}}</ion-select-option>\\n        <!-- <ion-select-option value=\\\"0\\\">India</ion-select-option> -->\\n      </ion-select>\\n    </ion-item>\\n\\n    <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\n      *ngIf=\\\"custData.controls.country.hasError('required') && custData.controls.country.touched\\\">\\n      <p class=\\\"content\\\">Please Select Country!</p>\\n    </ion-item>\\n\\n    <div *ngIf=\\\"country_name == 'INR'\\\">\\n      <ion-item no-padding lines=\\\"none\\\" class=\\\"items_ shadow_input\\\">\\n        <ion-select interface=\\\"action-sheet\\\" placeholder=\\\"State\\\" formControlName=\\\"state\\\" class=\\\"dropWidth_\\\" mode=\\\"md\\\">\\n          <ion-select-option *ngFor=\\\"let opt of state\\\" [value]=\\\"opt.id\\\">{{opt.name }}</ion-select-option>\\n        </ion-select>\\n      </ion-item>\\n\\n      <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\n        *ngIf=\\\"custData.controls.state.hasError('required') && custData.controls.state.touched\\\">\\n        <p class=\\\"content\\\">Please Select State!</p>\\n      </ion-item>\\n    </div>\\n\\n    <ion-item no-padding lines=\\\"none\\\" class=\\\"items_ shadow_input\\\">\\n      <ion-input placeholder=\\\"City\\\" formControlName=\\\"city\\\" class=\\\"input_\\\"></ion-input>\\n    </ion-item>\\n\\n    <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\n      *ngIf=\\\"custData.controls.city.hasError('required') && custData.controls.city.touched\\\">\\n      <p class=\\\"content\\\">Please Enter City!</p>\\n    </ion-item>\\n\\n    <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\n      *ngIf=\\\"!custData.controls.city.hasError('required') && custData.controls.city.touched && custData.controls.city.hasError('pattern')\\\">\\n      <p class=\\\"content\\\">Please Enter Only Characters!</p>\\n    </ion-item>\\n\\n    <ion-item no-padding lines=\\\"none\\\" class=\\\"items_ shadow_input\\\">\\n      <ion-input type=\\\"tel\\\" placeholder=\\\"Post Code\\\" formControlName=\\\"postal_code\\\" class=\\\"input_\\\">\\n      </ion-input>\\n    </ion-item>\\n\\n    <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\n      *ngIf=\\\"custData.controls.postal_code.hasError('required') && custData.controls.postal_code.touched\\\">\\n      <p class=\\\"content\\\">Please Enter Post Code!</p>\\n    </ion-item>\\n\\n    <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\n      *ngIf=\\\"!custData.get('postal_code').errors?.pattern && custData.get('postal_code').errors?.minlength && custData.get('postal_code').touched\\\">\\n      <p class=\\\"content\\\">Please Enter 6 Digits Post Code!</p>\\n    </ion-item>\\n\\n    <ion-item no-padding lines=\\\"none\\\" class=\\\"items_ shadow_input\\\">\\n      <ion-input type=\\\"text\\\" placeholder=\\\"Currency\\\" formControlName=\\\"currency\\\" class=\\\"input_\\\" readonly=\\\"true\\\">\\n      </ion-input>\\n    </ion-item>\\n\\n    <!-- <ion-item no-padding lines=\\\"none\\\" class=\\\"items_ shadow_input\\\">\\n      <ion-select interface=\\\"action-sheet\\\" placeholder=\\\"Currency\\\" formControlName=\\\"currency\\\"\\n        class=\\\"dropWidth_\\\" mode=\\\"md\\\" [(ngModel)]=\\\"selected_currency\\\">\\n        <ion-select-option *ngFor=\\\"let opt of currency\\\" [value]=\\\"opt.currency_code\\\">{{opt.currency_code}} - {{opt.currency_name}}</ion-select-option>\\n      </ion-select>\\n    </ion-item>\\n\\n    <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\n      *ngIf=\\\"custData.controls.currency.hasError('required') && custData.controls.currency.touched\\\">\\n      <p class=\\\"content\\\">Please Select Currency!</p>\\n    </ion-item> -->\\n\\n    <ion-item no-padding lines=\\\"none\\\" class=\\\"items_ shadow_input\\\">\\n      <ion-input type=\\\"text\\\" placeholder=\\\"Business Number\\\" formControlName=\\\"cus_number\\\" class=\\\"input_\\\">\\n      </ion-input>\\n    </ion-item>\\n\\n    <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\n      *ngIf=\\\"custData.controls.cus_number.hasError('required') && custData.controls.cus_number.touched\\\">\\n      <p class=\\\"content\\\">Please Enter Business Number!</p>\\n    </ion-item>\\n\\n    <ion-item no-padding lines=\\\"none\\\" class=\\\"items_ shadow_input\\\">\\n      <ion-input type=\\\"text\\\" minlength=\\\"15\\\" maxlength=\\\"15\\\" placeholder=\\\"GST Number\\\" formControlName=\\\"vat_code\\\"\\n        class=\\\"input_\\\"></ion-input>\\n    </ion-item>\\n\\n    <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\n      *ngIf=\\\"custData.controls.vat_code.hasError('required') && custData.controls.vat_code.touched\\\">\\n      <p class=\\\"content\\\">Please Enter GST Number!</p>\\n    </ion-item>\\n\\n    <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\n      *ngIf=\\\"!custData.get('vat_code').errors?.pattern && custData.get('vat_code').errors?.minlength && custData.get('vat_code').touched\\\">\\n      <p class=\\\"content\\\">Please Enter Valid GST Number!</p>\\n    </ion-item>\\n\\n  </form>\\n\\n</ion-content>\\n\\n<ion-footer>\\n  <div class=\\\"div_btn\\\">\\n    <ion-button expand=\\\"full\\\" size=\\\"large\\\" class=\\\"btn_ shadow_btn\\\" (click)=\\\"save()\\\">Save\\n    </ion-button>\\n  </div>\\n</ion-footer>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AddPage } from './add.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AddPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AddPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AddPageRoutingModule } from './add-routing.module';\n\nimport { AddPage } from './add.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    AddPageRoutingModule\n  ],\n  declarations: [AddPage]\n})\nexport class AddPageModule {}\n","export default \"ion-content {\\n  --padding-bottom: 16px;\\n  --keyboard-offset: 0px !important;\\n}\\nion-content .form_ {\\n  margin: 0px 0px;\\n  position: relative;\\n}\\nion-content .form_ .items_ {\\n  --background: var(--ion-color-light);\\n  width: 84%;\\n  border-radius: 24px;\\n  margin: 0 auto;\\n  --padding-start: 24px;\\n  --inner-padding-end: 12px;\\n  margin-top: 16px !important;\\n}\\nion-content .form_ .items_ .input_ {\\n  font-size: 14px;\\n  color: var(--ion-color-dark);\\n}\\nion-content .form_ .items_ .dropWidth_ {\\n  font-size: 14px;\\n  min-width: 100%;\\n  --padding-start: 0px;\\n  --padding-end: 6px;\\n  --placeholder-opacity: 0.5;\\n}\\nion-footer .div_btn {\\n  margin: 0px 0px 0px 0px;\\n}\\nion-footer .div_btn .btn_ {\\n  margin: 0;\\n  font-size: 14px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY3VzdG9tZXJzL2FkZC9hZGQucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0Usc0JBQUE7RUFDRSxpQ0FBQTtBQUNKO0FBQUk7RUFDRSxlQUFBO0VBQ0Esa0JBQUE7QUFFTjtBQURNO0VBQ0Usb0NBQUE7RUFDQSxVQUFBO0VBQ0EsbUJBQUE7RUFDQSxjQUFBO0VBQ0EscUJBQUE7RUFDQSx5QkFBQTtFQUNBLDJCQUFBO0FBR1I7QUFGUTtFQUNFLGVBQUE7RUFDQSw0QkFBQTtBQUlWO0FBRlE7RUFDRSxlQUFBO0VBQ0EsZUFBQTtFQUNBLG9CQUFBO0VBQ0Esa0JBQUE7RUFDQSwwQkFBQTtBQUlWO0FBRUk7RUFDRSx1QkFBQTtBQUNOO0FBQU07RUFDRSxTQUFBO0VBQ0EsZUFBQTtBQUVSIiwiZmlsZSI6InNyYy9hcHAvY3VzdG9tZXJzL2FkZC9hZGQucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW9uLWNvbnRlbnQge1xuICAtLXBhZGRpbmctYm90dG9tOiAxNnB4O1xuICAgIC0ta2V5Ym9hcmQtb2Zmc2V0OiAwcHggIWltcG9ydGFudDtcbiAgICAuZm9ybV8ge1xuICAgICAgbWFyZ2luOiAwcHggMHB4O1xuICAgICAgcG9zaXRpb246cmVsYXRpdmU7XG4gICAgICAuaXRlbXNfIHtcbiAgICAgICAgLS1iYWNrZ3JvdW5kOiB2YXIoLS1pb24tY29sb3ItbGlnaHQpO1xuICAgICAgICB3aWR0aDogODQlO1xuICAgICAgICBib3JkZXItcmFkaXVzOiAyNHB4O1xuICAgICAgICBtYXJnaW46IDAgYXV0bztcbiAgICAgICAgLS1wYWRkaW5nLXN0YXJ0OiAyNHB4O1xuICAgICAgICAtLWlubmVyLXBhZGRpbmctZW5kOiAxMnB4O1xuICAgICAgICBtYXJnaW4tdG9wOiAxNnB4ICFpbXBvcnRhbnQ7XG4gICAgICAgIC5pbnB1dF97XG4gICAgICAgICAgZm9udC1zaXplOiAxNHB4O1xuICAgICAgICAgIGNvbG9yOiB2YXIoLS1pb24tY29sb3ItZGFyayk7XG4gICAgICAgIH1cbiAgICAgICAgLmRyb3BXaWR0aF8ge1xuICAgICAgICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICAgICAgICBtaW4td2lkdGg6IDEwMCU7XG4gICAgICAgICAgLS1wYWRkaW5nLXN0YXJ0OiAwcHg7XG4gICAgICAgICAgLS1wYWRkaW5nLWVuZDogNnB4O1xuICAgICAgICAgIC0tcGxhY2Vob2xkZXItb3BhY2l0eTogMC41O1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG4gIGlvbi1mb290ZXJ7XG4gICAgLmRpdl9idG4ge1xuICAgICAgbWFyZ2luOiAwcHggMHB4IDBweCAwcHg7XG4gICAgICAuYnRuXyB7XG4gICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgZm9udC1zaXplOiAxNHB4O1xuICAgICAgfVxuICAgIH1cbiAgfSJdfQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { NavController, Platform } from '@ionic/angular';\nimport { StatusBar } from '@ionic-native/status-bar/ngx';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { CommonService } from 'src/app/global/common_service';\nimport { ApiService } from 'src/app/services/api.service';\nimport { timeout } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-add',\n  templateUrl: './add.page.html',\n  styleUrls: ['./add.page.scss'],\n})\nexport class AddPage implements OnInit {\n\n  custData: FormGroup;\n  customer_process: boolean;\n  state: any;\n  country: any;\n  statelist: any;\n  currency: any;\n  selected_currency: string;\n  selectedcountry: any;\n  country_name: any;\n\n  constructor(\n    private router: Router,\n    private navCtrl: NavController,\n    private statusBar: StatusBar,\n    private formBuilder: FormBuilder,\n    public apiService: ApiService,\n    private api: CommonService,\n    private plt: Platform,\n  ) {\n    this.cust_fb();\n  }\n\n  ngOnInit() {\n    this.plt.ready().then(() => {\n      this.countryData(this.api.NetworkStatus);\n    });\n  }\n\n  ionViewWillEnter() {\n    this.statusBar.show();\n    this.statusBar.styleDefault();\n    this.statusBar.backgroundColorByHexString('#FFF');\n  }\n\n  countryData(refresh = false, refresher?) {\n    this.api.presentLoading();\n    this.apiService.allApi(refresh).pipe(timeout(this.api.API_TIMEOUT)).subscribe(res => {\n      this.statelist = res.data.state\n      this.country = res.data.countries\n      this.selectedcountry = '79'\n      if (refresher) {\n        refresher.target.complete();\n      }\n      this.api.dismissLoading();\n    },\n      err => {\n        this.api.dismissLoading();\n        this.api.presentToastWithOptions(\"Internal Server Error Please try again after sometime.\");\n      });\n  }\n\n  goBack() {\n    this.navCtrl.back();\n  }\n  \n  stateList(e) {\n    this.state = this.statelist.filter(x=> x.country_id == e.detail.value)\n    this.currency = this.country.filter(x=> x.id == e.detail.value)\n    this.country_name = this.currency[0].currency_code\n    console.log(\"currency\",this.currency)\n    this.custData.patchValue({\n      currency: this.currency[0].currency_code + '-' + this.currency[0].currency_name,\n    });\n    \n  }\n\n  cust_fb() {\n    this.custData = this.formBuilder.group({\n      name: ['', Validators.required],\n      email: ['', Validators.required],\n      phone: [''],\n      address: [''],\n      country: [''],\n      state: [''],\n      city: ['', Validators.required],\n      postal_code: [''],\n      currency: [''],\n      cus_number: [''],\n      vat_code: [''],\n    });\n  }\n\n  save() {\n    for (let v in this.custData.controls) {\n      this.custData.controls[v].markAsTouched();\n    }\n    if (this.custData.valid) {\n      this.api.presentLoading()\n      var body = {\n        name: this.custData.value.name,\n        email: this.custData.value.email,\n        phone: this.custData.value.phone,\n        address: this.custData.value.address,\n        country: this.custData.value.country,\n        state: this.currency[0].currency_code == 'INR' ? this.custData.value.state : '',\n        city: this.custData.value.city,\n        postal_code: this.custData.value.postal_code,\n        currency: this.currency[0].currency_code,\n        // country : this.api.INDIA,\n        cus_number: this.custData.value.cus_number,\n        vat_code: this.custData.value.vat_code,\n        businessId: this.api.getBusinessId()\n      };\n      this.api.Post(\"Customer/add\", body).pipe(timeout(this.api.API_TIMEOUT)).subscribe(data => {\n        this.customer_process = false;\n        this.api.dismissLoading();\n        if (data.status == 1) {\n          this.api.presentToastWithOptions(data['message']);\n          this.router.navigate([\"/customers-list\"]);\n        }\n      },\n        err => {\n          this.api.dismissLoading();\n          this.api.presentToastWithOptions(\"Internal Server Error Please try again after sometime.\");\n        }\n      );\n    }\n  }\n}\n"]}