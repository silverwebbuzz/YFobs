/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
// tslint:disable-next-line:max-line-length
import { Component, ContentChild, ElementRef, EventEmitter, forwardRef, HostBinding, Input, IterableDiffers, Optional, Output, Renderer2, TemplateRef, ViewEncapsulation } from '@angular/core';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
import { IonItem, ModalController, Platform } from '@ionic/angular';
import { IonicSelectableAddItemTemplateDirective } from './ionic-selectable-add-item-template.directive';
import { IonicSelectableCloseButtonTemplateDirective } from './ionic-selectable-close-button-template.directive';
import { IonicSelectableFooterTemplateDirective } from './ionic-selectable-footer-template.directive';
import { IonicSelectableGroupEndTemplateDirective } from './ionic-selectable-group-end-template.directive';
import { IonicSelectableGroupTemplateDirective } from './ionic-selectable-group-template.directive';
import { IonicSelectableHeaderTemplateDirective } from './ionic-selectable-header-template.directive';
import { IonicSelectableItemEndTemplateDirective } from './ionic-selectable-item-end-template.directive';
import { IonicSelectableItemIconTemplateDirective } from './ionic-selectable-item-icon-template.directive';
import { IonicSelectableItemTemplateDirective } from './ionic-selectable-item-template.directive';
import { IonicSelectableMessageTemplateDirective } from './ionic-selectable-message-template.directive';
import { IonicSelectableModalComponent } from './ionic-selectable-modal.component';
import { IonicSelectablePlaceholderTemplateDirective } from './ionic-selectable-placeholder-template.directive';
import { IonicSelectableSearchFailTemplateDirective } from './ionic-selectable-search-fail-template.directive';
import { IonicSelectableTitleTemplateDirective } from './ionic-selectable-title-template.directive';
import { IonicSelectableValueTemplateDirective } from './ionic-selectable-value-template.directive';
import { IonicSelectableIconTemplateDirective } from './ionic-selectable-icon-template.directive';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@ionic/angular';
import * as ɵngcc2 from '@angular/common';

const _c0 = function (a0) { return { value: a0 }; };
function IonicSelectableComponent_div_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "div", 8);
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx_r0.valueTemplate)("ngTemplateOutletContext", ɵngcc0.ɵɵpureFunction1(2, _c0, ctx_r0._valueItems));
} }
function IonicSelectableComponent_div_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 9);
    ɵngcc0.ɵɵelement(1, "div", 8);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx_r1.valueTemplate)("ngTemplateOutletContext", ɵngcc0.ɵɵpureFunction1(2, _c0, ctx_r1._valueItems[0]));
} }
function IonicSelectableComponent_span_4_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 9);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const valueItem_r9 = ctx.$implicit;
    const ctx_r8 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r8._formatValueItem(valueItem_r9), " ");
} }
function IonicSelectableComponent_span_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtemplate(1, IonicSelectableComponent_span_4_div_1_Template, 2, 1, "div", 10);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r2._valueItems);
} }
function IonicSelectableComponent_div_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 9);
    ɵngcc0.ɵɵelement(1, "div", 11);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r3 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx_r3.placeholderTemplate);
} }
function IonicSelectableComponent_div_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 9);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r4 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r4.placeholder, " ");
} }
function IonicSelectableComponent_span_7_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtext(1, "\u00A0");
    ɵngcc0.ɵɵelementEnd();
} }
function IonicSelectableComponent_div_8_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 12);
    ɵngcc0.ɵɵelement(1, "div", 11);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r6 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx_r6.iconTemplate);
} }
function IonicSelectableComponent_div_9_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 13);
    ɵngcc0.ɵɵelement(1, "div", 14);
    ɵngcc0.ɵɵelementEnd();
} }
export class IonicSelectableComponent {
    /**
     * @param {?} _modalController
     * @param {?} _platform
     * @param {?} ionItem
     * @param {?} _iterableDiffers
     * @param {?} _element
     * @param {?} _renderer
     */
    constructor(_modalController, _platform, ionItem, _iterableDiffers, _element, _renderer) {
        this._modalController = _modalController;
        this._platform = _platform;
        this.ionItem = ionItem;
        this._iterableDiffers = _iterableDiffers;
        this._element = _element;
        this._renderer = _renderer;
        this._cssClass = true;
        this._isOnSearchEnabled = true;
        this._isEnabled = true;
        this._shouldBackdropClose = true;
        this._isOpened = false;
        this._value = null;
        this._canClear = false;
        this._hasConfirmButton = false;
        this._isMultiple = false;
        this._canAddItem = false;
        this.onItemsChange = new EventEmitter();
        this._hasIonLabel = false;
        this._ionLabelPosition = null;
        this._label = null;
        this._valueItems = [];
        this._searchText = '';
        this._hasSearchText = false;
        this._groups = [];
        this._itemsToConfirm = [];
        this._selectedItems = [];
        this._filteredGroups = [];
        this._isAddItemTemplateVisible = false;
        this._isFooterVisible = true;
        this._itemToAdd = null;
        this._footerButtonsCount = 0;
        this._hasFilteredItems = false;
        /**
         * A list of items.
         * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#items).
         *
         * \@default []
         * \@memberof IonicSelectableComponent
         */
        this.items = [];
        this.itemsChange = new EventEmitter();
        /**
         * Modal CSS class.
         * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#modalcssclass).
         *
         * \@default null
         * \@memberof IonicSelectableComponent
         */
        this.modalCssClass = null;
        /**
         * Modal enter animation.
         * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#modalenteranimation).
         *
         * \@default null
         * \@memberof IonicSelectableComponent
         */
        this.modalEnterAnimation = null;
        /**
         * Modal leave animation.
         * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#modalleaveanimation).
         *
         * \@default null
         * \@memberof IonicSelectableComponent
         */
        this.modalLeaveAnimation = null;
        /**
         * Determines whether Confirm button is enabled.
         * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#isconfirmbuttonenabled).
         *
         * \@default true
         * \@memberof IonicSelectableComponent
         */
        this.isConfirmButtonEnabled = true;
        /**
         * Item property to use as a unique identifier, e.g, `'id'`.
         * **Note**: `items` should be an object array.
         * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#itemvaluefield).
         *
         * \@default null
         * \@memberof IonicSelectableComponent
         */
        this.itemValueField = null;
        /**
         * Item property to display, e.g, `'name'`.
         * **Note**: `items` should be an object array.
         * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#itemtextfield).
         *
         * \@default false
         * \@memberof IonicSelectableComponent
         */
        this.itemTextField = null;
        /**
         *
         * Group property to use as a unique identifier to group items, e.g. `'country.id'`.
         * **Note**: `items` should be an object array.
         * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#groupvaluefield).
         *
         * \@default null
         * \@memberof IonicSelectableComponent
         */
        this.groupValueField = null;
        /**
         * Group property to display, e.g. `'country.name'`.
         * **Note**: `items` should be an object array.
         * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#grouptextfield).
         *
         * \@default null
         * \@memberof IonicSelectableComponent
         */
        this.groupTextField = null;
        /**
         * Determines whether to show Searchbar.
         * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#cansearch).
         *
         * \@default false
         * \@memberof IonicSelectableComponent
         */
        this.canSearch = false;
        /**
         * Determines whether Ionic [InfiniteScroll](https://ionicframework.com/docs/api/components/infinite-scroll/InfiniteScroll/) is enabled.
         * **Note**: Infinite scroll cannot be used together with virtual scroll.
         * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#hasinfinitescroll).
         *
         * \@default false
         * \@memberof IonicSelectableComponent
         */
        this.hasInfiniteScroll = false;
        /**
         * Determines whether Ionic [VirtualScroll](https://ionicframework.com/docs/api/components/virtual-scroll/VirtualScroll/) is enabled.
         * **Note**: Virtual scroll cannot be used together with infinite scroll.
         * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#hasvirtualscroll).
         *
         * \@default false
         * \@memberof IonicSelectableComponent
         */
        this.hasVirtualScroll = false;
        /**
         * See Ionic VirtualScroll [approxItemHeight](https://ionicframework.com/docs/api/components/virtual-scroll/VirtualScroll/).
         * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#virtualscrollapproxitemheight).
         *
         * \@default '40px'
         * \@memberof IonicSelectableComponent
         */
        this.virtualScrollApproxItemHeight = '40px';
        /**
         * A placeholder for Searchbar.
         * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#searchplaceholder).
         *
         * \@default 'Search'
         * \@memberof IonicSelectableComponent
         */
        this.searchPlaceholder = 'Search';
        /**
         * A placeholder.
         * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#placeholder).
         *
         * \@default null
         * \@memberof IonicSelectableComponent
         */
        this.placeholder = null;
        /**
         * Text to display when no items have been found during search.
         * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#searchfailtext).
         *
         * \@default 'No items found.'
         * \@memberof IonicSelectableComponent
         */
        this.searchFailText = 'No items found.';
        /**
         * Clear button text.
         * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#clearbuttontext).
         *
         * \@default 'Clear'
         * \@memberof IonicSelectableComponent
         */
        this.clearButtonText = 'Clear';
        /**
         * Add button text.
         * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#addbuttontext).
         *
         * \@default 'Add'
         * \@memberof IonicSelectableComponent
         */
        this.addButtonText = 'Add';
        /**
         * Confirm button text.
         * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#confirmbuttontext).
         *
         * \@default 'OK'
         * \@memberof IonicSelectableComponent
         */
        this.confirmButtonText = 'OK';
        /**
         * Close button text.
         * The field is only applicable to **iOS** platform, on **Android** only Cross icon is displayed.
         * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#closebuttontext).
         *
         * \@default 'Cancel'
         * \@memberof IonicSelectableComponent
         */
        this.closeButtonText = 'Cancel';
        /**
         * Determines whether Searchbar should receive focus when Modal is opened.
         * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#shouldfocussearchbar).
         *
         * \@default false
         * \@memberof IonicSelectableComponent
         */
        this.shouldFocusSearchbar = false;
        /**
         * Header color. [Ionic colors](https://ionicframework.com/docs/theming/advanced#colors) are supported.
         * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#headercolor).
         *
         * \@default null
         * \@memberof IonicSelectableComponent
         */
        this.headerColor = null;
        /**
         * Group color. [Ionic colors](https://ionicframework.com/docs/theming/advanced#colors) are supported.
         * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#groupcolor).
         *
         * \@default null
         * \@memberof IonicSelectableComponent
         */
        this.groupColor = null;
        /**
         * Close button slot. [Ionic slots](https://ionicframework.com/docs/api/buttons) are supported.
         * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#closebuttonslot).
         *
         * \@default 'start'
         * \@memberof IonicSelectableComponent
         */
        this.closeButtonSlot = 'start';
        /**
         * Item icon slot. [Ionic slots](https://ionicframework.com/docs/api/item) are supported.
         * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#itemiconslot).
         *
         * \@default 'start'
         * \@memberof IonicSelectableComponent
         */
        this.itemIconSlot = 'start';
        /**
         * Fires when item/s has been selected and Modal closed.
         * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#onchange).
         *
         * \@memberof IonicSelectableComponent
         */
        this.onChange = new EventEmitter();
        /**
         * Fires when the user is typing in Searchbar.
         * **Note**: `canSearch` and `isOnSearchEnabled` has to be enabled.
         * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#onsearch).
         *
         * \@memberof IonicSelectableComponent
         */
        this.onSearch = new EventEmitter();
        /**
         * Fires when no items have been found.
         * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#onsearchfail).
         *
         * \@memberof IonicSelectableComponent
         */
        this.onSearchFail = new EventEmitter();
        /**
         * Fires when some items have been found.
         * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#onsearchsuccess).
         *
         * \@memberof IonicSelectableComponent
         */
        this.onSearchSuccess = new EventEmitter();
        /**
         * Fires when the user has scrolled to the end of the list.
         * **Note**: `hasInfiniteScroll` has to be enabled.
         * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#oninfinitescroll).
         *
         * \@memberof IonicSelectableComponent
         */
        this.onInfiniteScroll = new EventEmitter();
        /**
         * Fires when Modal has been opened.
         * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#onopen).
         *
         * \@memberof IonicSelectableComponent
         */
        this.onOpen = new EventEmitter();
        /**
         * Fires when Modal has been closed.
         * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#onclose).
         *
         * \@memberof IonicSelectableComponent
         */
        this.onClose = new EventEmitter();
        /**
         * Fires when an item has been selected or unselected.
         * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#onselect).
         *
         * \@memberof IonicSelectableComponent
         */
        this.onSelect = new EventEmitter();
        /**
         * Fires when Clear button has been clicked.
         * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#onclear).
         *
         * \@memberof IonicSelectableComponent
         */
        this.onClear = new EventEmitter();
        /**
         * How long, in milliseconds, to wait to filter items or to trigger `onSearch` event after each keystroke.
         * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#searchdebounce).
         *
         * \@default 250
         * \@memberof IonicSelectableComponent
         */
        this.searchDebounce = 250;
        /**
         * A list of items to disable.
         * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#disableditems).
         *
         * \@default []
         * \@memberof IonicSelectableComponent
         */
        this.disabledItems = [];
        /**
         * Determines whether item value only should be stored in `ngModel`, not the entire item.
         * **Note**: Item value is defined by `itemValueField`.
         * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#shouldstoreitemvalue).
         *
         * \@default false
         * \@memberof IonicSelectableComponent
         */
        this.shouldStoreItemValue = false;
        /**
         * Determines whether to allow editing items.
         * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#cansaveitem).
         *
         * \@default false
         * \@memberof IonicSelectableComponent
         */
        this.canSaveItem = false;
        /**
         * Determines whether to allow deleting items.
         * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#candeleteitem).
         *
         * \@default false
         * \@memberof IonicSelectableComponent
         */
        this.canDeleteItem = false;
        /**
         * Fires when Edit item button has been clicked.
         * When the button has been clicked `ionicSelectableAddItemTemplate` will be shown. Use the template to create a form to edit item.
         * **Note**: `canSaveItem` has to be enabled.
         * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#onsaveitem).
         *
         * \@memberof IonicSelectableComponent
         */
        this.onSaveItem = new EventEmitter();
        /**
         * Fires when Delete item button has been clicked.
         * **Note**: `canDeleteItem` has to be enabled.
         * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#ondeleteitem).
         *
         * \@memberof IonicSelectableComponent
         */
        this.onDeleteItem = new EventEmitter();
        /**
         * Fires when Add item button has been clicked.
         * When the button has been clicked `ionicSelectableAddItemTemplate` will be shown. Use the template to create a form to add item.
         * **Note**: `canAddItem` has to be enabled.
         * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#onadditem).
         *
         * \@memberof IonicSelectableComponent
         */
        this.onAddItem = new EventEmitter();
        /**
         * See Ionic VirtualScroll [headerFn](https://ionicframework.com/docs/api/components/virtual-scroll/VirtualScroll/).
         * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#virtualscrollheaderfn).
         *
         * \@memberof IonicSelectableComponent
         */
        this.virtualScrollHeaderFn = (/**
         * @return {?}
         */
        () => {
            return null;
        });
        this.propagateOnChange = (/**
         * @param {?} _
         * @return {?}
         */
        (_) => { });
        this.propagateOnTouched = (/**
         * @return {?}
         */
        () => { });
        if (!this.items || !this.items.length) {
            this.items = [];
        }
        this._itemsDiffer = this._iterableDiffers.find(this.items).create();
    }
    /**
     * @return {?}
     */
    get _isMultipleCssClass() {
        return this.isMultiple;
    }
    /**
     * @return {?}
     */
    get _hasValueCssClass() {
        return this.hasValue();
    }
    /**
     * @return {?}
     */
    get _hasPlaceholderCssClass() {
        return this._hasPlaceholder;
    }
    /**
     * @return {?}
     */
    get _hasIonLabelCssClass() {
        return this._hasIonLabel;
    }
    /**
     * @return {?}
     */
    get _hasDefaultIonLabelCssClass() {
        return this._ionLabelPosition === 'default';
    }
    /**
     * @return {?}
     */
    get _hasFixedIonLabelCssClass() {
        return this._ionLabelPosition === 'fixed';
    }
    /**
     * @return {?}
     */
    get _hasStackedIonLabelCssClass() {
        return this._ionLabelPosition === 'stacked';
    }
    /**
     * @return {?}
     */
    get _hasFloatingIonLabelCssClass() {
        return this._ionLabelPosition === 'floating';
    }
    /**
     * @private
     * @return {?}
     */
    get _hasInfiniteScroll() {
        return this.isEnabled && this._modalComponent &&
            this._modalComponent._infiniteScroll ? true : false;
    }
    /**
     * @return {?}
     */
    get _shouldStoreItemValue() {
        return this.shouldStoreItemValue && this._hasObjects;
    }
    /**
     * Text of [Ionic Label](https://ionicframework.com/docs/api/label).
     * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#label).
     *
     * \@readonly
     * \@default null
     * \@memberof IonicSelectableComponent
     * @return {?}
     */
    get label() {
        return this._label;
    }
    /**
     * Text that the user has typed in Searchbar.
     * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#searchtext).
     *
     * \@readonly
     * \@default ''
     * \@memberof IonicSelectableComponent
     * @return {?}
     */
    get searchText() {
        return this._searchText;
    }
    /**
     * @param {?} searchText
     * @return {?}
     */
    set searchText(searchText) {
        this._searchText = searchText;
        this._setHasSearchText();
    }
    /**
     * Determines whether search is running.
     * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#issearching).
     *
     * \@default false
     * \@readonly
     * \@memberof IonicSelectableComponent
     * @return {?}
     */
    get isSearching() {
        return this._isSearching;
    }
    /**
     * Determines whether user has typed anything in Searchbar.
     * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#hassearchtext).
     *
     * \@default false
     * \@readonly
     * \@memberof IonicSelectableComponent
     * @return {?}
     */
    get hasSearchText() {
        return this._hasSearchText;
    }
    /**
     * @return {?}
     */
    get value() {
        return this._value;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set value(value) {
        this._value = value;
        // Set value items.
        this._valueItems.splice(0, this._valueItems.length);
        if (this.isMultiple) {
            if (value && value.length) {
                Array.prototype.push.apply(this._valueItems, value);
            }
        }
        else {
            if (!this._isNullOrWhiteSpace(value)) {
                this._valueItems.push(value);
            }
        }
        this._setIonItemHasValue();
        this._setHasPlaceholder();
    }
    /**
     * Determines whether the component is enabled.
     * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#isenabled).
     *
     * \@default true
     * \@memberof IonicSelectableComponent
     * @return {?}
     */
    get isEnabled() {
        return this._isEnabled;
    }
    /**
     * @param {?} isEnabled
     * @return {?}
     */
    set isEnabled(isEnabled) {
        this._isEnabled = !!isEnabled;
        this.enableIonItem(this._isEnabled);
    }
    /**
     * Determines whether Modal should be closed when backdrop is clicked.
     * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#shouldbackdropclose).
     *
     * \@default true
     * \@memberof IonicSelectableComponent
     * @return {?}
     */
    get shouldBackdropClose() {
        return this._shouldBackdropClose;
    }
    /**
     * @param {?} shouldBackdropClose
     * @return {?}
     */
    set shouldBackdropClose(shouldBackdropClose) {
        this._shouldBackdropClose = !!shouldBackdropClose;
    }
    /**
     * Determines whether Modal is opened.
     * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#isopened).
     *
     * \@default false
     * \@readonly
     * \@memberof IonicSelectableComponent
     * @return {?}
     */
    get isOpened() {
        return this._isOpened;
    }
    /**
     * Determines whether Confirm button is visible for single selection.
     * By default Confirm button is visible only for multiple selection.
     * **Note**: It is always true for multiple selection and cannot be changed.
     * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#hasconfirmbutton).
     *
     * \@default true
     * \@memberof IonicSelectableComponent
     * @return {?}
     */
    get hasConfirmButton() {
        return this._hasConfirmButton;
    }
    /**
     * @param {?} hasConfirmButton
     * @return {?}
     */
    set hasConfirmButton(hasConfirmButton) {
        this._hasConfirmButton = !!hasConfirmButton;
        this._countFooterButtons();
    }
    /**
     * Determines whether `onSearch` event is enabled.
     * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#isonsearchenabled).
     *
     * \@default true
     * \@memberof IonicSelectableComponent
     * @return {?}
     */
    get isOnSearchEnabled() {
        return this._isOnSearchEnabled;
    }
    /**
     * @param {?} isOnSearchEnabled
     * @return {?}
     */
    set isOnSearchEnabled(isOnSearchEnabled) {
        this._isOnSearchEnabled = !!isOnSearchEnabled;
    }
    /**
     * Determines whether to show Clear button.
     * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#canclear).
     *
     * \@default false
     * \@memberof IonicSelectableComponent
     * @return {?}
     */
    get canClear() {
        return this._canClear;
    }
    /**
     * @param {?} canClear
     * @return {?}
     */
    set canClear(canClear) {
        this._canClear = !!canClear;
        this._countFooterButtons();
    }
    /**
     * Determines whether multiple items can be selected.
     * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#ismultiple).
     *
     * \@default false
     * \@memberof IonicSelectableComponent
     * @return {?}
     */
    get isMultiple() {
        return this._isMultiple;
    }
    /**
     * @param {?} isMultiple
     * @return {?}
     */
    set isMultiple(isMultiple) {
        this._isMultiple = !!isMultiple;
        this._countFooterButtons();
    }
    /**
     * A list of items that are selected and awaiting confirmation by user, when he has clicked Confirm button.
     * After the user has clicked Confirm button items to confirm are cleared.
     * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#itemstoconfirm).
     *
     * \@default []
     * \@readonly
     * \@memberof IonicSelectableComponent
     * @return {?}
     */
    get itemsToConfirm() {
        return this._itemsToConfirm;
    }
    /**
     * Determines whether to allow adding items.
     * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#canadditem).
     *
     * \@default false
     * \@memberof IonicSelectableComponent
     * @return {?}
     */
    get canAddItem() {
        return this._canAddItem;
    }
    /**
     * @param {?} canAddItem
     * @return {?}
     */
    set canAddItem(canAddItem) {
        this._canAddItem = !!canAddItem;
        this._countFooterButtons();
    }
    /**
     * @return {?}
     */
    initFocus() { }
    /**
     * @param {?} isEnabled
     * @return {?}
     */
    enableIonItem(isEnabled) {
        if (!this.ionItem) {
            return;
        }
        this.ionItem.disabled = !isEnabled;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    _isNullOrWhiteSpace(value) {
        if (value === null || value === undefined) {
            return true;
        }
        // Convert value to string in case if it's not.
        return value.toString().replace(/\s/g, '').length < 1;
    }
    /**
     * @return {?}
     */
    _setHasSearchText() {
        this._hasSearchText = !this._isNullOrWhiteSpace(this._searchText);
    }
    /**
     * @return {?}
     */
    _hasOnSearch() {
        return this.isOnSearchEnabled && this.onSearch.observers.length > 0;
    }
    /**
     * @return {?}
     */
    _hasOnSaveItem() {
        return this.canSaveItem && this.onSaveItem.observers.length > 0;
    }
    /**
     * @return {?}
     */
    _hasOnAddItem() {
        return this.canAddItem && this.onAddItem.observers.length > 0;
    }
    /**
     * @return {?}
     */
    _hasOnDeleteItem() {
        return this.canDeleteItem && this.onDeleteItem.observers.length > 0;
    }
    /**
     * @return {?}
     */
    _emitValueChange() {
        this.propagateOnChange(this.value);
        this.onChange.emit({
            component: this,
            value: this.value
        });
    }
    /**
     * @return {?}
     */
    _emitSearch() {
        if (!this.canSearch) {
            return;
        }
        this.onSearch.emit({
            component: this,
            text: this._searchText
        });
    }
    /**
     * @param {?} item
     * @param {?} isSelected
     * @return {?}
     */
    _emitOnSelect(item, isSelected) {
        this.onSelect.emit({
            component: this,
            item: item,
            isSelected: isSelected
        });
    }
    /**
     * @param {?} items
     * @return {?}
     */
    _emitOnClear(items) {
        this.onClear.emit({
            component: this,
            items: items
        });
    }
    /**
     * @param {?} isSuccess
     * @return {?}
     */
    _emitOnSearchSuccessOrFail(isSuccess) {
        /** @type {?} */
        const eventData = {
            component: this,
            text: this._searchText
        };
        if (isSuccess) {
            this.onSearchSuccess.emit(eventData);
        }
        else {
            this.onSearchFail.emit(eventData);
        }
    }
    /**
     * @param {?} item
     * @return {?}
     */
    _formatItem(item) {
        if (this._isNullOrWhiteSpace(item)) {
            return null;
        }
        return this.itemTextField ? item[this.itemTextField] : item.toString();
    }
    /**
     * @param {?} item
     * @return {?}
     */
    _formatValueItem(item) {
        if (this._shouldStoreItemValue) {
            // Get item text from the list as we store it's value only.
            /** @type {?} */
            const selectedItem = this.items.find((/**
             * @param {?} _item
             * @return {?}
             */
            _item => {
                return _item[this.itemValueField] === item;
            }));
            return this._formatItem(selectedItem);
        }
        else {
            return this._formatItem(item);
        }
    }
    /**
     * @param {?} item
     * @return {?}
     */
    _getItemValue(item) {
        if (!this._hasObjects) {
            return item;
        }
        return item[this.itemValueField];
    }
    /**
     * @param {?} item
     * @return {?}
     */
    _getStoredItemValue(item) {
        if (!this._hasObjects) {
            return item;
        }
        return this._shouldStoreItemValue ? item : item[this.itemValueField];
    }
    /**
     * @return {?}
     */
    _onSearchbarClear() {
        // Ionic Searchbar doesn't clear bind with ngModel value.
        // Do it ourselves.
        this._searchText = '';
    }
    /**
     * @return {?}
     */
    _filterItems() {
        this._setHasSearchText();
        if (this._hasOnSearch()) {
            // Delegate filtering to the event.
            this._emitSearch();
        }
        else {
            // Default filtering.
            /** @type {?} */
            let groups = [];
            if (!this._searchText || !this._searchText.trim()) {
                groups = this._groups;
            }
            else {
                /** @type {?} */
                const filterText = this._searchText.trim().toLowerCase();
                this._groups.forEach((/**
                 * @param {?} group
                 * @return {?}
                 */
                group => {
                    /** @type {?} */
                    const items = group.items.filter((/**
                     * @param {?} item
                     * @return {?}
                     */
                    item => {
                        /** @type {?} */
                        const itemText = (this.itemTextField ?
                            item[this.itemTextField] : item).toString().toLowerCase();
                        return itemText.indexOf(filterText) !== -1;
                    }));
                    if (items.length) {
                        groups.push({
                            value: group.value,
                            text: group.text,
                            items: items
                        });
                    }
                }));
                // No items found.
                if (!groups.length) {
                    groups.push({
                        items: []
                    });
                }
            }
            this._filteredGroups = groups;
            this._hasFilteredItems = !this._areGroupsEmpty(groups);
            this._emitOnSearchSuccessOrFail(this._hasFilteredItems);
        }
    }
    /**
     * @param {?} item
     * @return {?}
     */
    _isItemDisabled(item) {
        if (!this.disabledItems) {
            return;
        }
        return this.disabledItems.some((/**
         * @param {?} _item
         * @return {?}
         */
        _item => {
            return this._getItemValue(_item) === this._getItemValue(item);
        }));
    }
    /**
     * @param {?} item
     * @return {?}
     */
    _isItemSelected(item) {
        return this._selectedItems.find((/**
         * @param {?} selectedItem
         * @return {?}
         */
        selectedItem => {
            return this._getItemValue(item) === this._getStoredItemValue(selectedItem);
        })) !== undefined;
    }
    /**
     * @param {?} item
     * @return {?}
     */
    _addSelectedItem(item) {
        if (this._shouldStoreItemValue) {
            this._selectedItems.push(this._getItemValue(item));
        }
        else {
            this._selectedItems.push(item);
        }
    }
    /**
     * @param {?} item
     * @return {?}
     */
    _deleteSelectedItem(item) {
        /** @type {?} */
        let itemToDeleteIndex;
        this._selectedItems.forEach((/**
         * @param {?} selectedItem
         * @param {?} itemIndex
         * @return {?}
         */
        (selectedItem, itemIndex) => {
            if (this._getItemValue(item) ===
                this._getStoredItemValue(selectedItem)) {
                itemToDeleteIndex = itemIndex;
            }
        }));
        this._selectedItems.splice(itemToDeleteIndex, 1);
    }
    /**
     * @return {?}
     */
    _click() {
        if (!this.isEnabled) {
            return;
        }
        this._label = this._getLabelText();
        this.open().then((/**
         * @return {?}
         */
        () => {
            this.onOpen.emit({
                component: this
            });
        }));
    }
    /**
     * @param {?} event
     * @param {?} item
     * @return {?}
     */
    _saveItem(event, item) {
        event.stopPropagation();
        this._itemToAdd = item;
        if (this._hasOnSaveItem()) {
            this.onSaveItem.emit({
                component: this,
                item: this._itemToAdd
            });
        }
        else {
            this.showAddItemTemplate();
        }
    }
    /**
     * @param {?} event
     * @param {?} item
     * @return {?}
     */
    _deleteItemClick(event, item) {
        event.stopPropagation();
        this._itemToAdd = item;
        if (this._hasOnDeleteItem()) {
            // Delegate logic to event.
            this.onDeleteItem.emit({
                component: this,
                item: this._itemToAdd
            });
        }
        else {
            this.deleteItem(this._itemToAdd);
        }
    }
    /**
     * @return {?}
     */
    _addItemClick() {
        if (this._hasOnAddItem()) {
            this.onAddItem.emit({
                component: this
            });
        }
        else {
            this.showAddItemTemplate();
        }
    }
    /**
     * @return {?}
     */
    _positionAddItemTemplate() {
        // Wait for the template to render.
        setTimeout((/**
         * @return {?}
         */
        () => {
            /** @type {?} */
            const footer = this._modalComponent._element.nativeElement
                .querySelector('.ionic-selectable-add-item-template ion-footer');
            this._addItemTemplateFooterHeight = footer ? `calc(100% - ${footer.offsetHeight}px)` : '100%';
        }), 100);
    }
    /**
     * @return {?}
     */
    _close() {
        this.close().then((/**
         * @return {?}
         */
        () => {
            this.onClose.emit({
                component: this
            });
        }));
        if (!this._hasOnSearch()) {
            this._searchText = '';
            this._setHasSearchText();
        }
    }
    /**
     * @return {?}
     */
    _clear() {
        /** @type {?} */
        const selectedItems = this._selectedItems;
        this.clear();
        this._emitValueChange();
        this._emitOnClear(selectedItems);
        this.close().then((/**
         * @return {?}
         */
        () => {
            this.onClose.emit({
                component: this
            });
        }));
    }
    /**
     * @return {?}
     */
    _getMoreItems() {
        this.onInfiniteScroll.emit({
            component: this,
            text: this._searchText
        });
    }
    /**
     * @param {?} items
     * @return {?}
     */
    _setItemsToConfirm(items) {
        // Return a copy of original array, so it couldn't be changed from outside.
        this._itemsToConfirm = [].concat(items);
    }
    /**
     * @param {?} selectedItem
     * @return {?}
     */
    _doSelect(selectedItem) {
        this.value = selectedItem;
        this._emitValueChange();
    }
    /**
     * @param {?} item
     * @return {?}
     */
    _select(item) {
        /** @type {?} */
        const isItemSelected = this._isItemSelected(item);
        if (this.isMultiple) {
            if (isItemSelected) {
                this._deleteSelectedItem(item);
            }
            else {
                this._addSelectedItem(item);
            }
            this._setItemsToConfirm(this._selectedItems);
            // Emit onSelect event after setting items to confirm so they could be used
            // inside the event.
            this._emitOnSelect(item, !isItemSelected);
        }
        else {
            if (this.hasConfirmButton || this.footerTemplate) {
                // Don't close Modal and keep track on items to confirm.
                // When footer template is used it's up to developer to close Modal.
                this._selectedItems = [];
                if (isItemSelected) {
                    this._deleteSelectedItem(item);
                }
                else {
                    this._addSelectedItem(item);
                }
                this._setItemsToConfirm(this._selectedItems);
                // Emit onSelect event after setting items to confirm so they could be used
                // inside the event.
                this._emitOnSelect(item, !isItemSelected);
            }
            else {
                if (!isItemSelected) {
                    this._selectedItems = [];
                    this._addSelectedItem(item);
                    // Emit onSelect before onChange.
                    this._emitOnSelect(item, true);
                    if (this._shouldStoreItemValue) {
                        this._doSelect(this._getItemValue(item));
                    }
                    else {
                        this._doSelect(item);
                    }
                }
                this._close();
            }
        }
    }
    /**
     * @return {?}
     */
    _confirm() {
        this.confirm();
        this._close();
    }
    /**
     * @private
     * @return {?}
     */
    _getLabelText() {
        return this._ionLabelElement ? this._ionLabelElement.textContent : null;
    }
    /**
     * @private
     * @param {?} groups
     * @return {?}
     */
    _areGroupsEmpty(groups) {
        return groups.length === 0 || groups.every((/**
         * @param {?} group
         * @return {?}
         */
        group => {
            return !group.items || group.items.length === 0;
        }));
    }
    /**
     * @private
     * @return {?}
     */
    _countFooterButtons() {
        /** @type {?} */
        let footerButtonsCount = 0;
        if (this.canClear) {
            footerButtonsCount++;
        }
        if (this.isMultiple || this._hasConfirmButton) {
            footerButtonsCount++;
        }
        if (this.canAddItem) {
            footerButtonsCount++;
        }
        this._footerButtonsCount = footerButtonsCount;
    }
    /**
     * @private
     * @param {?} items
     * @return {?}
     */
    _setItems(items) {
        // It's important to have an empty starting group with empty items (groups[0].items),
        // because we bind to it when using VirtualScroll.
        // See https://github.com/eakoriakin/ionic-selectable/issues/70.
        /** @type {?} */
        let groups = [{
                items: items || []
            }];
        if (items && items.length) {
            if (this._hasGroups) {
                groups = [];
                items.forEach((/**
                 * @param {?} item
                 * @return {?}
                 */
                item => {
                    /** @type {?} */
                    const groupValue = this._getPropertyValue(item, this.groupValueField);
                    /** @type {?} */
                    const group = groups.find((/**
                     * @param {?} _group
                     * @return {?}
                     */
                    _group => _group.value === groupValue));
                    if (group) {
                        group.items.push(item);
                    }
                    else {
                        groups.push({
                            value: groupValue,
                            text: this._getPropertyValue(item, this.groupTextField),
                            items: [item]
                        });
                    }
                }));
            }
        }
        this._groups = groups;
        this._filteredGroups = this._groups;
        this._hasFilteredItems = !this._areGroupsEmpty(this._filteredGroups);
    }
    /**
     * @private
     * @param {?} object
     * @param {?} property
     * @return {?}
     */
    _getPropertyValue(object, property) {
        if (!property) {
            return null;
        }
        return property.split('.').reduce((/**
         * @param {?} _object
         * @param {?} _property
         * @return {?}
         */
        (_object, _property) => {
            return _object ? _object[_property] : null;
        }), object);
    }
    /**
     * @private
     * @param {?} hasFocus
     * @return {?}
     */
    _setIonItemHasFocus(hasFocus) {
        if (!this.ionItem) {
            return;
        }
        // Apply focus CSS class for proper stylying of ion-item/ion-label.
        this._setIonItemCssClass('item-has-focus', hasFocus);
    }
    /**
     * @private
     * @return {?}
     */
    _setIonItemHasValue() {
        if (!this.ionItem) {
            return;
        }
        // Apply value CSS class for proper stylying of ion-item/ion-label.
        this._setIonItemCssClass('item-has-value', this.hasValue());
    }
    /**
     * @private
     * @return {?}
     */
    _setHasPlaceholder() {
        this._hasPlaceholder = !this.hasValue() &&
            (!this._isNullOrWhiteSpace(this.placeholder) || this.placeholderTemplate) ?
            true : false;
    }
    /**
     * @private
     * @param {?} cssClass
     * @param {?} shouldAdd
     * @return {?}
     */
    _setIonItemCssClass(cssClass, shouldAdd) {
        if (!this._ionItemElement) {
            return;
        }
        // Change to Renderer2
        if (shouldAdd) {
            this._renderer.addClass(this._ionItemElement, cssClass);
        }
        else {
            this._renderer.removeClass(this._ionItemElement, cssClass);
        }
    }
    /**
     * @private
     * @param {?} isVisible
     * @return {?}
     */
    _toggleAddItemTemplate(isVisible) {
        // It should be possible to show/hide the template regardless
        // canAddItem or canSaveItem parameters, so we could implement some
        // custom behavior. E.g. adding item when search fails using onSearchFail event.
        if (!this.addItemTemplate) {
            return;
        }
        // To make SaveItemTemplate visible we just position it over list using CSS.
        // We don't hide list with *ngIf or [hidden] to prevent its scroll position.
        this._isAddItemTemplateVisible = isVisible;
        this._isFooterVisible = !isVisible;
    }
    /* ControlValueAccessor */
    /**
     * @param {?} value
     * @return {?}
     */
    writeValue(value) {
        this.value = value;
    }
    /**
     * @param {?} method
     * @return {?}
     */
    registerOnChange(method) {
        this.propagateOnChange = method;
    }
    /**
     * @param {?} method
     * @return {?}
     */
    registerOnTouched(method) {
        this.propagateOnTouched = method;
    }
    /**
     * @param {?} isDisabled
     * @return {?}
     */
    setDisabledState(isDisabled) {
        this.isEnabled = !isDisabled;
    }
    /* .ControlValueAccessor */
    /**
     * @return {?}
     */
    ngOnInit() {
        this._isIos = this._platform.is('ios');
        this._isMD = !this._isIos;
        this._hasObjects = !this._isNullOrWhiteSpace(this.itemValueField);
        // Grouping is supported for objects only.
        // Ionic VirtualScroll has it's own implementation of grouping.
        this._hasGroups = Boolean(this._hasObjects && this.groupValueField && !this.hasVirtualScroll);
        if (this.ionItem) {
            this._ionItemElement = this._element.nativeElement.closest('ion-item');
            this._setIonItemCssClass('item-interactive', true);
            this._setIonItemCssClass('item-ionic-selectable', true);
            if (this._ionItemElement) {
                this._ionLabelElement = this._ionItemElement.querySelector('ion-label');
                if (this._ionLabelElement) {
                    this._hasIonLabel = true;
                    this._ionLabelPosition = this._ionLabelElement.getAttribute('position') || 'default';
                }
            }
        }
        this.enableIonItem(this.isEnabled);
    }
    /**
     * @return {?}
     */
    ngDoCheck() {
        /** @type {?} */
        const itemsChanges = this._itemsDiffer.diff(this.items);
        if (itemsChanges) {
            this._setItems(this.items);
            this.value = this.value;
            this.onItemsChange.emit({
                component: this
            });
        }
    }
    /**
     * Adds item.
     * **Note**: If you want an item to be added to the original array as well use two-way data binding syntax on `[(items)]` field.
     * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#additem).
     *
     * \@memberof IonicSelectableComponent
     * @param {?} item Item to add.
     * @return {?} Promise that resolves when item has been added.
     */
    addItem(item) {
        /** @type {?} */
        const self = this;
        // Adding item triggers onItemsChange.
        // Return a promise that resolves when onItemsChange finishes.
        // We need a promise or user could do something after item has been added,
        // e.g. use search() method to find the added item.
        this.items.unshift(item);
        // Close any running subscription.
        if (this._addItemObservable) {
            this._addItemObservable.unsubscribe();
        }
        return new Promise((/**
         * @param {?} resolve
         * @param {?} reject
         * @return {?}
         */
        function (resolve, reject) {
            // Complete callback isn't fired for some reason,
            // so unsubscribe in both success and fail cases.
            self._addItemObservable = self.onItemsChange.asObservable().subscribe((/**
             * @return {?}
             */
            () => {
                self._addItemObservable.unsubscribe();
                resolve();
            }), (/**
             * @return {?}
             */
            () => {
                self._addItemObservable.unsubscribe();
                reject();
            }));
        }));
    }
    /**
     * Deletes item.
     * **Note**: If you want an item to be deleted from the original array as well use two-way data binding syntax on `[(items)]` field.
     * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#deleteitem).
     *
     * \@memberof IonicSelectableComponent
     * @param {?} item Item to delete.
     * @return {?} Promise that resolves when item has been deleted.
     */
    deleteItem(item) {
        /** @type {?} */
        const self = this;
        /** @type {?} */
        let hasValueChanged = false;
        // Remove deleted item from selected items.
        if (this._selectedItems) {
            this._selectedItems = this._selectedItems.filter((/**
             * @param {?} _item
             * @return {?}
             */
            _item => {
                return this._getItemValue(item) !== this._getStoredItemValue(_item);
            }));
        }
        // Remove deleted item from value.
        if (this.value) {
            if (this.isMultiple) {
                /** @type {?} */
                const values = this.value.filter((/**
                 * @param {?} value
                 * @return {?}
                 */
                value => {
                    return value.id !== item.id;
                }));
                if (values.length !== this.value.length) {
                    this.value = values;
                    hasValueChanged = true;
                }
            }
            else {
                if (item === this.value) {
                    this.value = null;
                    hasValueChanged = true;
                }
            }
        }
        if (hasValueChanged) {
            this._emitValueChange();
        }
        // Remove deleted item from list.
        /** @type {?} */
        const items = this.items.filter((/**
         * @param {?} _item
         * @return {?}
         */
        _item => {
            return _item.id !== item.id;
        }));
        // Refresh items on parent component.
        this.itemsChange.emit(items);
        // Refresh list.
        this._setItems(items);
        this.onItemsChange.emit({
            component: this
        });
        // Close any running subscription.
        if (this._deleteItemObservable) {
            this._deleteItemObservable.unsubscribe();
        }
        return new Promise((/**
         * @param {?} resolve
         * @param {?} reject
         * @return {?}
         */
        function (resolve, reject) {
            // Complete callback isn't fired for some reason,
            // so unsubscribe in both success and fail cases.
            self._deleteItemObservable = self.onItemsChange.asObservable().subscribe((/**
             * @return {?}
             */
            () => {
                self._deleteItemObservable.unsubscribe();
                resolve();
            }), (/**
             * @return {?}
             */
            () => {
                self._deleteItemObservable.unsubscribe();
                reject();
            }));
        }));
    }
    /**
     * Determines whether any item has been selected.
     * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#hasvalue).
     *
     * \@memberof IonicSelectableComponent
     * @return {?} A boolean determining whether any item has been selected.
     */
    hasValue() {
        if (this.isMultiple) {
            return this._valueItems.length !== 0;
        }
        else {
            return this._valueItems.length !== 0 && !this._isNullOrWhiteSpace(this._valueItems[0]);
        }
    }
    /**
     * Opens Modal.
     * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#open).
     *
     * \@memberof IonicSelectableComponent
     * @return {?} Promise that resolves when Modal has been opened.
     */
    open() {
        /** @type {?} */
        const self = this;
        return new Promise((/**
         * @param {?} resolve
         * @param {?} reject
         * @return {?}
         */
        function (resolve, reject) {
            if (!self._isEnabled || self._isOpened) {
                reject('IonicSelectable is disabled or already opened.');
                return;
            }
            self._filterItems();
            self._isOpened = true;
            /** @type {?} */
            const modalOptions = {
                component: IonicSelectableModalComponent,
                componentProps: { selectComponent: self },
                backdropDismiss: self._shouldBackdropClose
            };
            if (self.modalCssClass) {
                modalOptions.cssClass = self.modalCssClass;
            }
            if (self.modalEnterAnimation) {
                modalOptions.enterAnimation = self.modalEnterAnimation;
            }
            if (self.modalLeaveAnimation) {
                modalOptions.leaveAnimation = self.modalLeaveAnimation;
            }
            self._modalController.create(modalOptions).then((/**
             * @param {?} modal
             * @return {?}
             */
            modal => {
                self._modal = modal;
                modal.present().then((/**
                 * @return {?}
                 */
                () => {
                    // Set focus after Modal has opened to avoid flickering of focus highlighting
                    // before Modal opening.
                    self._setIonItemHasFocus(true);
                    resolve();
                }));
                modal.onWillDismiss().then((/**
                 * @return {?}
                 */
                () => {
                    self._setIonItemHasFocus(false);
                }));
                modal.onDidDismiss().then((/**
                 * @param {?} event
                 * @return {?}
                 */
                event => {
                    self._isOpened = false;
                    self._itemsToConfirm = [];
                    // Closed by clicking on backdrop outside modal.
                    if (event.role === 'backdrop') {
                        self.onClose.emit({
                            component: self
                        });
                    }
                }));
            }));
        }));
    }
    /**
     * Closes Modal.
     * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#close).
     *
     * \@memberof IonicSelectableComponent
     * @return {?} Promise that resolves when Modal has been closed.
     */
    close() {
        /** @type {?} */
        const self = this;
        return new Promise((/**
         * @param {?} resolve
         * @param {?} reject
         * @return {?}
         */
        function (resolve, reject) {
            if (!self._isEnabled || !self._isOpened) {
                reject('IonicSelectable is disabled or already closed.');
                return;
            }
            self.propagateOnTouched();
            self._isOpened = false;
            self._itemToAdd = null;
            self._modal.dismiss().then((/**
             * @return {?}
             */
            () => {
                self._setIonItemHasFocus(false);
                self.hideAddItemTemplate();
                resolve();
            }));
        }));
    }
    /**
     * Clears value.
     * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#clear).
     *
     * \@memberof IonicSelectableComponent
     * @return {?}
     */
    clear() {
        this.value = this.isMultiple ? [] : null;
        this._itemsToConfirm = [];
        this.propagateOnChange(this.value);
    }
    /**
     * Confirms selected items by updating value.
     * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#confirm).
     *
     * \@memberof IonicSelectableComponent
     * @return {?}
     */
    confirm() {
        if (this.isMultiple) {
            this._doSelect(this._selectedItems);
        }
        else if (this.hasConfirmButton || this.footerTemplate) {
            this._doSelect(this._selectedItems[0] || null);
        }
    }
    /**
     * Selects or deselects all or specific items.
     * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#toggleitems).
     *
     * \@memberof IonicSelectableComponent
     * @param {?} isSelect Determines whether to select or deselect items.
     * @param {?=} items
     * @return {?}
     */
    toggleItems(isSelect, items) {
        if (isSelect) {
            /** @type {?} */
            const hasItems = items && items.length;
            /** @type {?} */
            let itemsToToggle = this._groups.reduce((/**
             * @param {?} allItems
             * @param {?} group
             * @return {?}
             */
            (allItems, group) => {
                return allItems.concat(group.items);
            }), []);
            // Don't allow to select all items in single mode.
            if (!this.isMultiple && !hasItems) {
                itemsToToggle = [];
            }
            // Toggle specific items.
            if (hasItems) {
                itemsToToggle = itemsToToggle.filter((/**
                 * @param {?} itemToToggle
                 * @return {?}
                 */
                itemToToggle => {
                    return items.find((/**
                     * @param {?} item
                     * @return {?}
                     */
                    item => {
                        return this._getItemValue(itemToToggle) === this._getItemValue(item);
                    })) !== undefined;
                }));
                // Take the first item for single mode.
                if (!this.isMultiple) {
                    itemsToToggle.splice(0, 1);
                }
            }
            itemsToToggle.forEach((/**
             * @param {?} item
             * @return {?}
             */
            item => {
                this._addSelectedItem(item);
            }));
        }
        else {
            this._selectedItems = [];
        }
        this._setItemsToConfirm(this._selectedItems);
    }
    /**
     * Scrolls to the top of Modal content.
     * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#scrolltotop).
     *
     * \@memberof IonicSelectableComponent
     * @return {?} Promise that resolves when scroll has been completed.
     */
    scrollToTop() {
        /** @type {?} */
        const self = this;
        return new Promise((/**
         * @param {?} resolve
         * @param {?} reject
         * @return {?}
         */
        function (resolve, reject) {
            if (!self._isOpened) {
                reject('IonicSelectable content cannot be scrolled.');
                return;
            }
            self._modalComponent._content.scrollToTop().then((/**
             * @return {?}
             */
            () => {
                resolve();
            }));
        }));
    }
    /**
     * Scrolls to the bottom of Modal content.
     * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#scrolltobottom).
     *
     * \@memberof IonicSelectableComponent
     * @return {?} Promise that resolves when scroll has been completed.
     */
    scrollToBottom() {
        /** @type {?} */
        const self = this;
        return new Promise((/**
         * @param {?} resolve
         * @param {?} reject
         * @return {?}
         */
        function (resolve, reject) {
            if (!self._isOpened) {
                reject('IonicSelectable content cannot be scrolled.');
                return;
            }
            self._modalComponent._content.scrollToBottom().then((/**
             * @return {?}
             */
            () => {
                resolve();
            }));
        }));
    }
    /**
     * Starts search process by showing Loading spinner.
     * Use it together with `onSearch` event to indicate search start.
     * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#startsearch).
     *
     * \@memberof IonicSelectableComponent
     * @return {?}
     */
    startSearch() {
        if (!this._isEnabled) {
            return;
        }
        this.showLoading();
    }
    /**
     * Ends search process by hiding Loading spinner and refreshing items.
     * Use it together with `onSearch` event to indicate search end.
     * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#endsearch).
     *
     * \@memberof IonicSelectableComponent
     * @return {?}
     */
    endSearch() {
        if (!this._isEnabled) {
            return;
        }
        this.hideLoading();
        // When inside Ionic Modal and onSearch event is used,
        // ngDoCheck() doesn't work as _itemsDiffer fails to detect changes.
        // See https://github.com/eakoriakin/ionic-selectable/issues/44.
        // Refresh items manually.
        this._setItems(this.items);
        this._emitOnSearchSuccessOrFail(this._hasFilteredItems);
    }
    /**
     * Enables infinite scroll.
     * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#enableinfinitescroll).
     *
     * \@memberof IonicSelectableComponent
     * @return {?}
     */
    enableInfiniteScroll() {
        if (!this._hasInfiniteScroll) {
            return;
        }
        this._modalComponent._infiniteScroll.disabled = false;
    }
    /**
     * Disables infinite scroll.
     * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#disableinfinitescroll).
     *
     * \@memberof IonicSelectableComponent
     * @return {?}
     */
    disableInfiniteScroll() {
        if (!this._hasInfiniteScroll) {
            return;
        }
        this._modalComponent._infiniteScroll.disabled = true;
    }
    /**
     * Ends infinite scroll.
     * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#endinfinitescroll).
     *
     * \@memberof IonicSelectableComponent
     * @return {?}
     */
    endInfiniteScroll() {
        if (!this._hasInfiniteScroll) {
            return;
        }
        this._modalComponent._infiniteScroll.complete();
        this._setItems(this.items);
    }
    /**
     * Triggers search of items.
     * **Note**: `canSearch` has to be enabled.
     * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#search).
     *
     * \@memberof IonicSelectableComponent
     * @param {?} text Text to search items by.
     * @return {?}
     */
    search(text) {
        if (!this._isEnabled || !this._isOpened || !this.canSearch) {
            return;
        }
        this._searchText = text;
        this._setHasSearchText();
        this._filterItems();
    }
    /**
     * Shows Loading spinner.
     * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#showloading).
     *
     * \@memberof IonicSelectableComponent
     * @return {?}
     */
    showLoading() {
        if (!this._isEnabled) {
            return;
        }
        this._isSearching = true;
    }
    /**
     * Hides Loading spinner.
     * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#hideloading).
     *
     * \@memberof IonicSelectableComponent
     * @return {?}
     */
    hideLoading() {
        if (!this._isEnabled) {
            return;
        }
        this._isSearching = false;
    }
    /**
     * Shows `ionicSelectableAddItemTemplate`.
     * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#showadditemtemplate).
     *
     * \@memberof IonicSelectableComponent
     * @return {?}
     */
    showAddItemTemplate() {
        this._toggleAddItemTemplate(true);
        // Position the template only when it shous up.
        this._positionAddItemTemplate();
    }
    /**
     * Hides `ionicSelectableAddItemTemplate`.
     * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#hideadditemtemplate).
     *
     * \@memberof IonicSelectableComponent
     * @return {?}
     */
    hideAddItemTemplate() {
        // Clean item to add as it's no longer needed once Add Item Modal has been closed.
        this._itemToAdd = null;
        this._toggleAddItemTemplate(false);
    }
}
IonicSelectableComponent.ɵfac = function IonicSelectableComponent_Factory(t) { return new (t || IonicSelectableComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ModalController), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.IonItem, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2)); };
IonicSelectableComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: IonicSelectableComponent, selectors: [["ionic-selectable"]], contentQueries: function IonicSelectableComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, IonicSelectableValueTemplateDirective, true, TemplateRef);
        ɵngcc0.ɵɵcontentQuery(dirIndex, IonicSelectableItemTemplateDirective, true, TemplateRef);
        ɵngcc0.ɵɵcontentQuery(dirIndex, IonicSelectableItemEndTemplateDirective, true, TemplateRef);
        ɵngcc0.ɵɵcontentQuery(dirIndex, IonicSelectableTitleTemplateDirective, true, TemplateRef);
        ɵngcc0.ɵɵcontentQuery(dirIndex, IonicSelectablePlaceholderTemplateDirective, true, TemplateRef);
        ɵngcc0.ɵɵcontentQuery(dirIndex, IonicSelectableMessageTemplateDirective, true, TemplateRef);
        ɵngcc0.ɵɵcontentQuery(dirIndex, IonicSelectableGroupTemplateDirective, true, TemplateRef);
        ɵngcc0.ɵɵcontentQuery(dirIndex, IonicSelectableGroupEndTemplateDirective, true, TemplateRef);
        ɵngcc0.ɵɵcontentQuery(dirIndex, IonicSelectableCloseButtonTemplateDirective, true, TemplateRef);
        ɵngcc0.ɵɵcontentQuery(dirIndex, IonicSelectableSearchFailTemplateDirective, true, TemplateRef);
        ɵngcc0.ɵɵcontentQuery(dirIndex, IonicSelectableAddItemTemplateDirective, true, TemplateRef);
        ɵngcc0.ɵɵcontentQuery(dirIndex, IonicSelectableFooterTemplateDirective, true, TemplateRef);
        ɵngcc0.ɵɵcontentQuery(dirIndex, IonicSelectableHeaderTemplateDirective, true, TemplateRef);
        ɵngcc0.ɵɵcontentQuery(dirIndex, IonicSelectableItemIconTemplateDirective, true, TemplateRef);
        ɵngcc0.ɵɵcontentQuery(dirIndex, IonicSelectableIconTemplateDirective, true, TemplateRef);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.valueTemplate = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.itemTemplate = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.itemEndTemplate = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.titleTemplate = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.placeholderTemplate = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.messageTemplate = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.groupTemplate = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.groupEndTemplate = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.closeButtonTemplate = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.searchFailTemplate = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.addItemTemplate = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.footerTemplate = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.headerTemplate = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.itemIconTemplate = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.iconTemplate = _t.first);
    } }, hostVars: 26, hostBindings: function IonicSelectableComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassProp("ionic-selectable", ctx._cssClass)("ionic-selectable-is-multiple", ctx._isMultipleCssClass)("ionic-selectable-has-value", ctx._hasValueCssClass)("ionic-selectable-has-placeholder", ctx._hasPlaceholderCssClass)("ionic-selectable-has-label", ctx._hasIonLabelCssClass)("ionic-selectable-label-default", ctx._hasDefaultIonLabelCssClass)("ionic-selectable-label-fixed", ctx._hasFixedIonLabelCssClass)("ionic-selectable-label-stacked", ctx._hasStackedIonLabelCssClass)("ionic-selectable-label-floating", ctx._hasFloatingIonLabelCssClass)("ionic-selectable-is-enabled", ctx.isEnabled)("ionic-selectable-can-clear", ctx.canClear)("ionic-selectable-ios", ctx._isIos)("ionic-selectable-md", ctx._isMD);
    } }, inputs: { items: "items", modalCssClass: "modalCssClass", modalEnterAnimation: "modalEnterAnimation", modalLeaveAnimation: "modalLeaveAnimation", isConfirmButtonEnabled: "isConfirmButtonEnabled", itemValueField: "itemValueField", itemTextField: "itemTextField", groupValueField: "groupValueField", groupTextField: "groupTextField", canSearch: "canSearch", hasInfiniteScroll: "hasInfiniteScroll", hasVirtualScroll: "hasVirtualScroll", virtualScrollApproxItemHeight: "virtualScrollApproxItemHeight", searchPlaceholder: "searchPlaceholder", placeholder: "placeholder", searchFailText: "searchFailText", clearButtonText: "clearButtonText", addButtonText: "addButtonText", confirmButtonText: "confirmButtonText", closeButtonText: "closeButtonText", shouldFocusSearchbar: "shouldFocusSearchbar", headerColor: "headerColor", groupColor: "groupColor", closeButtonSlot: "closeButtonSlot", itemIconSlot: "itemIconSlot", searchDebounce: "searchDebounce", disabledItems: "disabledItems", shouldStoreItemValue: "shouldStoreItemValue", canSaveItem: "canSaveItem", canDeleteItem: "canDeleteItem", virtualScrollHeaderFn: "virtualScrollHeaderFn", isEnabled: "isEnabled", shouldBackdropClose: "shouldBackdropClose", hasConfirmButton: "hasConfirmButton", isOnSearchEnabled: "isOnSearchEnabled", canClear: "canClear", isMultiple: "isMultiple", canAddItem: "canAddItem" }, outputs: { itemsChange: "itemsChange", onChange: "onChange", onSearch: "onSearch", onSearchFail: "onSearchFail", onSearchSuccess: "onSearchSuccess", onInfiniteScroll: "onInfiniteScroll", onOpen: "onOpen", onClose: "onClose", onSelect: "onSelect", onClear: "onClear", onSaveItem: "onSaveItem", onDeleteItem: "onDeleteItem", onAddItem: "onAddItem" }, features: [ɵngcc0.ɵɵProvidersFeature([{
                provide: NG_VALUE_ACCESSOR,
                useExisting: forwardRef(( /**
                 * @return {?}
                 */() => IonicSelectableComponent)),
                multi: true
            }])], decls: 11, vars: 9, consts: [[1, "ionic-selectable-inner"], [1, "ionic-selectable-value"], [3, "ngTemplateOutlet", "ngTemplateOutletContext", 4, "ngIf"], ["class", "ionic-selectable-value-item", 4, "ngIf"], [4, "ngIf"], ["class", "ionic-selectable-icon-template", 4, "ngIf"], ["class", "ionic-selectable-icon", 4, "ngIf"], ["type", "button", 1, "ionic-selectable-cover", 3, "disabled", "click"], [3, "ngTemplateOutlet", "ngTemplateOutletContext"], [1, "ionic-selectable-value-item"], ["class", "ionic-selectable-value-item", 4, "ngFor", "ngForOf"], [3, "ngTemplateOutlet"], [1, "ionic-selectable-icon-template"], [1, "ionic-selectable-icon"], [1, "ionic-selectable-icon-inner"]], template: function IonicSelectableComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "div", 1);
        ɵngcc0.ɵɵtemplate(2, IonicSelectableComponent_div_2_Template, 1, 4, "div", 2);
        ɵngcc0.ɵɵtemplate(3, IonicSelectableComponent_div_3_Template, 2, 4, "div", 3);
        ɵngcc0.ɵɵtemplate(4, IonicSelectableComponent_span_4_Template, 2, 1, "span", 4);
        ɵngcc0.ɵɵtemplate(5, IonicSelectableComponent_div_5_Template, 2, 1, "div", 3);
        ɵngcc0.ɵɵtemplate(6, IonicSelectableComponent_div_6_Template, 2, 1, "div", 3);
        ɵngcc0.ɵɵtemplate(7, IonicSelectableComponent_span_7_Template, 2, 0, "span", 4);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(8, IonicSelectableComponent_div_8_Template, 2, 1, "div", 5);
        ɵngcc0.ɵɵtemplate(9, IonicSelectableComponent_div_9_Template, 2, 0, "div", 6);
        ɵngcc0.ɵɵelementStart(10, "button", 7);
        ɵngcc0.ɵɵlistener("click", function IonicSelectableComponent_Template_button_click_10_listener() { return ctx._click(); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.valueTemplate && ctx._valueItems.length && ctx.isMultiple);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.valueTemplate && ctx._valueItems.length && !ctx.isMultiple);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.valueTemplate && ctx._valueItems.length);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx._hasPlaceholder && ctx.placeholderTemplate);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx._hasPlaceholder && !ctx.placeholderTemplate);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx._valueItems.length && !ctx._hasPlaceholder);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.iconTemplate);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.iconTemplate);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("disabled", !ctx.isEnabled);
    } }, directives: [ɵngcc2.NgIf, ɵngcc2.NgTemplateOutlet, ɵngcc2.NgForOf], styles: [".item-ionic-selectable .item-inner .input-wrapper{align-items:normal}.item-ionic-selectable ion-label{flex:1;max-width:initial}.ionic-selectable{display:block;max-width:45%}.ionic-selectable-inner{display:flex;flex-wrap:wrap;flex-direction:row;justify-content:flex-end}.ionic-selectable-has-placeholder .ionic-selectable-value-item{color:var(--placeholder-color,#999)}.ionic-selectable-value{flex:1;padding-top:13px;padding-bottom:13px;overflow:hidden}.ionic-selectable-value-item{text-overflow:ellipsis;overflow:hidden;white-space:nowrap}.ionic-selectable-value-item:not(:last-child){margin-bottom:5px}.ionic-selectable-icon{position:relative;width:20px}.ionic-selectable-icon-inner{position:absolute;top:20px;left:5px;border-top:5px solid;border-right:5px solid transparent;border-left:5px solid transparent;pointer-events:none;color:var(--icon-color,#999)}.ionic-selectable-icon-template{-ms-grid-row-align:center;align-self:center;margin-left:5px}.ionic-selectable-ios .ionic-selectable-value{padding-top:11px;padding-bottom:11px}.ionic-selectable-ios .ionic-selectable-icon-inner{top:19px}.ionic-selectable-spinner{position:fixed;bottom:0;top:0;left:0;right:0;z-index:1}.ionic-selectable-spinner-background{top:0;bottom:0;left:0;right:0;position:absolute;background-color:#000;opacity:.05}.ionic-selectable-spinner ion-spinner{position:absolute;top:50%;left:50%;z-index:10;margin-top:-14px;margin-left:-14px}.ionic-selectable-cover{left:0;top:0;margin:0;position:absolute;width:100%;height:100%;border:0;background:0 0;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;outline:0}.ionic-selectable-add-item-template{position:fixed;bottom:0;left:0;right:0;background-color:#fff}.ionic-selectable-add-item-template-inner{overflow-y:auto}.ionic-selectable-add-item-template-inner>ion-footer{bottom:0;position:absolute}.ionic-selectable:not(.ionic-selectable-has-label){max-width:100%;width:100%}.ionic-selectable:not(.ionic-selectable-has-label)-value-item{text-align:right}.ionic-selectable-label-floating,.ionic-selectable-label-stacked{-ms-grid-row-align:stretch;align-self:stretch;max-width:100%;padding-left:0;padding-top:8px;padding-bottom:8px}.ionic-selectable-label-floating .ionic-selectable-value,.ionic-selectable-label-stacked .ionic-selectable-value{padding-top:0;padding-bottom:0;min-height:19px}.ionic-selectable-label-floating .ionic-selectable-icon-inner,.ionic-selectable-label-stacked .ionic-selectable-icon-inner{top:7px}.ionic-selectable-label-floating.ionic-selectable-ios .ionic-selectable-value,.ionic-selectable-label-stacked.ionic-selectable-ios .ionic-selectable-value{padding-top:0;padding-bottom:0;min-height:20px}.ionic-selectable-label-floating.ionic-selectable-ios .ionic-selectable-icon-inner,.ionic-selectable-label-stacked.ionic-selectable-ios .ionic-selectable-icon-inner{top:8px}.ionic-selectable-label-default .ionic-selectable-value,.ionic-selectable-label-fixed .ionic-selectable-value{padding-left:var(--padding-start,16px)}.ionic-selectable-label-fixed:not(.ionic-selectable-has-value) .ionic-selectable-value{padding-left:calc(var(--padding-start,$padding) + 11px)}.ionic-selectable-modal .ionic-selectable-group ion-item-divider{padding-right:16px}.ionic-selectable-modal .ionic-selectable-item-button{margin-left:8px;margin-right:8px}.ionic-selectable-modal-ios .ionic-selectable-message{padding:8px}.ionic-selectable-modal-ios .ionic-selectable-group ion-item-divider{padding-right:8px}.ionic-selectable-modal-md .ionic-selectable-message{padding:8px 12px}.ionic-selectable-modal.ionic-selectable-modal-can-clear.ionic-selectable-modal-is-multiple .footer .col:first-child{padding-right:8px}.ionic-selectable-modal.ionic-selectable-modal-can-clear.ionic-selectable-modal-is-multiple .footer .col:last-child{padding-left:8px}.ionic-selectable-modal.ionic-selectable-modal-is-add-item-template-visible>.content>.scroll-content,.ionic-selectable-modal.ionic-selectable-modal-is-searching .scroll-content{overflow-y:hidden}.ionic-selectable-modal ion-header ion-toolbar:first-of-type{padding-top:var(--ion-safe-area-top,0)}"], encapsulation: 2 });
/** @nocollapse */
IonicSelectableComponent.ctorParameters = () => [
    { type: ModalController },
    { type: Platform },
    { type: IonItem, decorators: [{ type: Optional }] },
    { type: IterableDiffers },
    { type: ElementRef },
    { type: Renderer2 }
];
IonicSelectableComponent.propDecorators = {
    _cssClass: [{ type: HostBinding, args: ['class.ionic-selectable',] }],
    _isIos: [{ type: HostBinding, args: ['class.ionic-selectable-ios',] }],
    _isMD: [{ type: HostBinding, args: ['class.ionic-selectable-md',] }],
    _isMultipleCssClass: [{ type: HostBinding, args: ['class.ionic-selectable-is-multiple',] }],
    _hasValueCssClass: [{ type: HostBinding, args: ['class.ionic-selectable-has-value',] }],
    _hasPlaceholderCssClass: [{ type: HostBinding, args: ['class.ionic-selectable-has-placeholder',] }],
    _hasIonLabelCssClass: [{ type: HostBinding, args: ['class.ionic-selectable-has-label',] }],
    _hasDefaultIonLabelCssClass: [{ type: HostBinding, args: ['class.ionic-selectable-label-default',] }],
    _hasFixedIonLabelCssClass: [{ type: HostBinding, args: ['class.ionic-selectable-label-fixed',] }],
    _hasStackedIonLabelCssClass: [{ type: HostBinding, args: ['class.ionic-selectable-label-stacked',] }],
    _hasFloatingIonLabelCssClass: [{ type: HostBinding, args: ['class.ionic-selectable-label-floating',] }],
    items: [{ type: Input }],
    itemsChange: [{ type: Output }],
    isEnabled: [{ type: HostBinding, args: ['class.ionic-selectable-is-enabled',] }, { type: Input, args: ['isEnabled',] }],
    shouldBackdropClose: [{ type: Input, args: ['shouldBackdropClose',] }],
    modalCssClass: [{ type: Input }],
    modalEnterAnimation: [{ type: Input }],
    modalLeaveAnimation: [{ type: Input }],
    isConfirmButtonEnabled: [{ type: Input }],
    hasConfirmButton: [{ type: Input, args: ['hasConfirmButton',] }],
    itemValueField: [{ type: Input }],
    itemTextField: [{ type: Input }],
    groupValueField: [{ type: Input }],
    groupTextField: [{ type: Input }],
    canSearch: [{ type: Input }],
    isOnSearchEnabled: [{ type: Input, args: ['isOnSearchEnabled',] }],
    canClear: [{ type: HostBinding, args: ['class.ionic-selectable-can-clear',] }, { type: Input, args: ['canClear',] }],
    hasInfiniteScroll: [{ type: Input }],
    hasVirtualScroll: [{ type: Input }],
    virtualScrollApproxItemHeight: [{ type: Input }],
    searchPlaceholder: [{ type: Input }],
    placeholder: [{ type: Input }],
    isMultiple: [{ type: Input, args: ['isMultiple',] }],
    searchFailText: [{ type: Input }],
    clearButtonText: [{ type: Input }],
    addButtonText: [{ type: Input }],
    confirmButtonText: [{ type: Input }],
    closeButtonText: [{ type: Input }],
    shouldFocusSearchbar: [{ type: Input }],
    headerColor: [{ type: Input }],
    groupColor: [{ type: Input }],
    closeButtonSlot: [{ type: Input }],
    itemIconSlot: [{ type: Input }],
    onChange: [{ type: Output }],
    onSearch: [{ type: Output }],
    onSearchFail: [{ type: Output }],
    onSearchSuccess: [{ type: Output }],
    onInfiniteScroll: [{ type: Output }],
    onOpen: [{ type: Output }],
    onClose: [{ type: Output }],
    onSelect: [{ type: Output }],
    onClear: [{ type: Output }],
    searchDebounce: [{ type: Input }],
    disabledItems: [{ type: Input }],
    shouldStoreItemValue: [{ type: Input }],
    canSaveItem: [{ type: Input }],
    canDeleteItem: [{ type: Input }],
    canAddItem: [{ type: Input, args: ['canAddItem',] }],
    onSaveItem: [{ type: Output }],
    onDeleteItem: [{ type: Output }],
    onAddItem: [{ type: Output }],
    valueTemplate: [{ type: ContentChild, args: [IonicSelectableValueTemplateDirective, { read: TemplateRef },] }],
    itemTemplate: [{ type: ContentChild, args: [IonicSelectableItemTemplateDirective, { read: TemplateRef },] }],
    itemEndTemplate: [{ type: ContentChild, args: [IonicSelectableItemEndTemplateDirective, { read: TemplateRef },] }],
    titleTemplate: [{ type: ContentChild, args: [IonicSelectableTitleTemplateDirective, { read: TemplateRef },] }],
    placeholderTemplate: [{ type: ContentChild, args: [IonicSelectablePlaceholderTemplateDirective, { read: TemplateRef },] }],
    messageTemplate: [{ type: ContentChild, args: [IonicSelectableMessageTemplateDirective, { read: TemplateRef },] }],
    groupTemplate: [{ type: ContentChild, args: [IonicSelectableGroupTemplateDirective, { read: TemplateRef },] }],
    groupEndTemplate: [{ type: ContentChild, args: [IonicSelectableGroupEndTemplateDirective, { read: TemplateRef },] }],
    closeButtonTemplate: [{ type: ContentChild, args: [IonicSelectableCloseButtonTemplateDirective, { read: TemplateRef },] }],
    searchFailTemplate: [{ type: ContentChild, args: [IonicSelectableSearchFailTemplateDirective, { read: TemplateRef },] }],
    addItemTemplate: [{ type: ContentChild, args: [IonicSelectableAddItemTemplateDirective, { read: TemplateRef },] }],
    footerTemplate: [{ type: ContentChild, args: [IonicSelectableFooterTemplateDirective, { read: TemplateRef },] }],
    headerTemplate: [{ type: ContentChild, args: [IonicSelectableHeaderTemplateDirective, { read: TemplateRef },] }],
    itemIconTemplate: [{ type: ContentChild, args: [IonicSelectableItemIconTemplateDirective, { read: TemplateRef },] }],
    iconTemplate: [{ type: ContentChild, args: [IonicSelectableIconTemplateDirective, { read: TemplateRef },] }],
    virtualScrollHeaderFn: [{ type: Input }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(IonicSelectableComponent, [{
        type: Component,
        args: [{
                selector: 'ionic-selectable',
                template: "<div class=\"ionic-selectable-inner\">\n  <div class=\"ionic-selectable-value\">\n    <div *ngIf=\"valueTemplate && _valueItems.length && isMultiple\"\n      [ngTemplateOutlet]=\"valueTemplate\"\n      [ngTemplateOutletContext]=\"{ value: _valueItems }\">\n    </div>\n    <div class=\"ionic-selectable-value-item\"\n      *ngIf=\"valueTemplate && _valueItems.length && !isMultiple\">\n      <div [ngTemplateOutlet]=\"valueTemplate\"\n        [ngTemplateOutletContext]=\"{ value: _valueItems[0] }\">\n      </div>\n    </div>\n    <span *ngIf=\"!valueTemplate && _valueItems.length\">\n      <div class=\"ionic-selectable-value-item\"\n        *ngFor=\"let valueItem of _valueItems\">\n        {{_formatValueItem(valueItem)}}\n      </div>\n    </span>\n    <div *ngIf=\"_hasPlaceholder && placeholderTemplate\"\n      class=\"ionic-selectable-value-item\">\n      <div [ngTemplateOutlet]=\"placeholderTemplate\">\n      </div>\n    </div>\n    <div class=\"ionic-selectable-value-item\"\n      *ngIf=\"_hasPlaceholder && !placeholderTemplate\">\n      {{placeholder}}\n    </div>\n    <!-- Fix icon allignment when there's no value or placeholder. -->\n    <span *ngIf=\"!_valueItems.length && !_hasPlaceholder\">&nbsp;</span>\n  </div>\n  <div *ngIf=\"iconTemplate\" class=\"ionic-selectable-icon-template\">\n      <div [ngTemplateOutlet]=\"iconTemplate\"></div>\n  </div>\n  <div *ngIf=\"!iconTemplate\" class=\"ionic-selectable-icon\">\n    <div class=\"ionic-selectable-icon-inner\"></div>\n  </div>\n  <!-- Need to be type=\"button\" otherwise click event triggers form ngSubmit. -->\n  <button class=\"ionic-selectable-cover\" [disabled]=\"!isEnabled\"\n    (click)=\"_click()\" type=\"button\">\n  </button>\n</div>\n",
                encapsulation: ViewEncapsulation.None,
                providers: [{
                        provide: NG_VALUE_ACCESSOR,
                        useExisting: forwardRef(( /**
                         * @return {?}
                         */() => IonicSelectableComponent)),
                        multi: true
                    }],
                styles: [".item-ionic-selectable .item-inner .input-wrapper{align-items:normal}.item-ionic-selectable ion-label{flex:1;max-width:initial}.ionic-selectable{display:block;max-width:45%}.ionic-selectable-inner{display:flex;flex-wrap:wrap;flex-direction:row;justify-content:flex-end}.ionic-selectable-has-placeholder .ionic-selectable-value-item{color:var(--placeholder-color,#999)}.ionic-selectable-value{flex:1;padding-top:13px;padding-bottom:13px;overflow:hidden}.ionic-selectable-value-item{text-overflow:ellipsis;overflow:hidden;white-space:nowrap}.ionic-selectable-value-item:not(:last-child){margin-bottom:5px}.ionic-selectable-icon{position:relative;width:20px}.ionic-selectable-icon-inner{position:absolute;top:20px;left:5px;border-top:5px solid;border-right:5px solid transparent;border-left:5px solid transparent;pointer-events:none;color:var(--icon-color,#999)}.ionic-selectable-icon-template{-ms-grid-row-align:center;align-self:center;margin-left:5px}.ionic-selectable-ios .ionic-selectable-value{padding-top:11px;padding-bottom:11px}.ionic-selectable-ios .ionic-selectable-icon-inner{top:19px}.ionic-selectable-spinner{position:fixed;bottom:0;top:0;left:0;right:0;z-index:1}.ionic-selectable-spinner-background{top:0;bottom:0;left:0;right:0;position:absolute;background-color:#000;opacity:.05}.ionic-selectable-spinner ion-spinner{position:absolute;top:50%;left:50%;z-index:10;margin-top:-14px;margin-left:-14px}.ionic-selectable-cover{left:0;top:0;margin:0;position:absolute;width:100%;height:100%;border:0;background:0 0;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;outline:0}.ionic-selectable-add-item-template{position:fixed;bottom:0;left:0;right:0;background-color:#fff}.ionic-selectable-add-item-template-inner{overflow-y:auto}.ionic-selectable-add-item-template-inner>ion-footer{bottom:0;position:absolute}.ionic-selectable:not(.ionic-selectable-has-label){max-width:100%;width:100%}.ionic-selectable:not(.ionic-selectable-has-label)-value-item{text-align:right}.ionic-selectable-label-floating,.ionic-selectable-label-stacked{-ms-grid-row-align:stretch;align-self:stretch;max-width:100%;padding-left:0;padding-top:8px;padding-bottom:8px}.ionic-selectable-label-floating .ionic-selectable-value,.ionic-selectable-label-stacked .ionic-selectable-value{padding-top:0;padding-bottom:0;min-height:19px}.ionic-selectable-label-floating .ionic-selectable-icon-inner,.ionic-selectable-label-stacked .ionic-selectable-icon-inner{top:7px}.ionic-selectable-label-floating.ionic-selectable-ios .ionic-selectable-value,.ionic-selectable-label-stacked.ionic-selectable-ios .ionic-selectable-value{padding-top:0;padding-bottom:0;min-height:20px}.ionic-selectable-label-floating.ionic-selectable-ios .ionic-selectable-icon-inner,.ionic-selectable-label-stacked.ionic-selectable-ios .ionic-selectable-icon-inner{top:8px}.ionic-selectable-label-default .ionic-selectable-value,.ionic-selectable-label-fixed .ionic-selectable-value{padding-left:var(--padding-start,16px)}.ionic-selectable-label-fixed:not(.ionic-selectable-has-value) .ionic-selectable-value{padding-left:calc(var(--padding-start,$padding) + 11px)}.ionic-selectable-modal .ionic-selectable-group ion-item-divider{padding-right:16px}.ionic-selectable-modal .ionic-selectable-item-button{margin-left:8px;margin-right:8px}.ionic-selectable-modal-ios .ionic-selectable-message{padding:8px}.ionic-selectable-modal-ios .ionic-selectable-group ion-item-divider{padding-right:8px}.ionic-selectable-modal-md .ionic-selectable-message{padding:8px 12px}.ionic-selectable-modal.ionic-selectable-modal-can-clear.ionic-selectable-modal-is-multiple .footer .col:first-child{padding-right:8px}.ionic-selectable-modal.ionic-selectable-modal-can-clear.ionic-selectable-modal-is-multiple .footer .col:last-child{padding-left:8px}.ionic-selectable-modal.ionic-selectable-modal-is-add-item-template-visible>.content>.scroll-content,.ionic-selectable-modal.ionic-selectable-modal-is-searching .scroll-content{overflow-y:hidden}.ionic-selectable-modal ion-header ion-toolbar:first-of-type{padding-top:var(--ion-safe-area-top,0)}"]
            }]
    }], function () { return [{ type: ɵngcc1.ModalController }, { type: ɵngcc1.Platform }, { type: ɵngcc1.IonItem, decorators: [{
                type: Optional
            }] }, { type: ɵngcc0.IterableDiffers }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }]; }, { _cssClass: [{
            type: HostBinding,
            args: ['class.ionic-selectable']
        }], items: [{
            type: Input
        }], itemsChange: [{
            type: Output
        }], modalCssClass: [{
            type: Input
        }], modalEnterAnimation: [{
            type: Input
        }], modalLeaveAnimation: [{
            type: Input
        }], isConfirmButtonEnabled: [{
            type: Input
        }], itemValueField: [{
            type: Input
        }], itemTextField: [{
            type: Input
        }], groupValueField: [{
            type: Input
        }], groupTextField: [{
            type: Input
        }], canSearch: [{
            type: Input
        }], hasInfiniteScroll: [{
            type: Input
        }], hasVirtualScroll: [{
            type: Input
        }], virtualScrollApproxItemHeight: [{
            type: Input
        }], searchPlaceholder: [{
            type: Input
        }], placeholder: [{
            type: Input
        }], searchFailText: [{
            type: Input
        }], clearButtonText: [{
            type: Input
        }], addButtonText: [{
            type: Input
        }], confirmButtonText: [{
            type: Input
        }], closeButtonText: [{
            type: Input
        }], shouldFocusSearchbar: [{
            type: Input
        }], headerColor: [{
            type: Input
        }], groupColor: [{
            type: Input
        }], closeButtonSlot: [{
            type: Input
        }], itemIconSlot: [{
            type: Input
        }], onChange: [{
            type: Output
        }], onSearch: [{
            type: Output
        }], onSearchFail: [{
            type: Output
        }], onSearchSuccess: [{
            type: Output
        }], onInfiniteScroll: [{
            type: Output
        }], onOpen: [{
            type: Output
        }], onClose: [{
            type: Output
        }], onSelect: [{
            type: Output
        }], onClear: [{
            type: Output
        }], searchDebounce: [{
            type: Input
        }], disabledItems: [{
            type: Input
        }], shouldStoreItemValue: [{
            type: Input
        }], canSaveItem: [{
            type: Input
        }], canDeleteItem: [{
            type: Input
        }], onSaveItem: [{
            type: Output
        }], onDeleteItem: [{
            type: Output
        }], onAddItem: [{
            type: Output
        }], virtualScrollHeaderFn: [{
            type: Input
        }], _isMultipleCssClass: [{
            type: HostBinding,
            args: ['class.ionic-selectable-is-multiple']
        }], _hasValueCssClass: [{
            type: HostBinding,
            args: ['class.ionic-selectable-has-value']
        }], _hasPlaceholderCssClass: [{
            type: HostBinding,
            args: ['class.ionic-selectable-has-placeholder']
        }], _hasIonLabelCssClass: [{
            type: HostBinding,
            args: ['class.ionic-selectable-has-label']
        }], _hasDefaultIonLabelCssClass: [{
            type: HostBinding,
            args: ['class.ionic-selectable-label-default']
        }], _hasFixedIonLabelCssClass: [{
            type: HostBinding,
            args: ['class.ionic-selectable-label-fixed']
        }], _hasStackedIonLabelCssClass: [{
            type: HostBinding,
            args: ['class.ionic-selectable-label-stacked']
        }], _hasFloatingIonLabelCssClass: [{
            type: HostBinding,
            args: ['class.ionic-selectable-label-floating']
        }], isEnabled: [{
            type: HostBinding,
            args: ['class.ionic-selectable-is-enabled']
        }, {
            type: Input,
            args: ['isEnabled']
        }], shouldBackdropClose: [{
            type: Input,
            args: ['shouldBackdropClose']
        }], hasConfirmButton: [{
            type: Input,
            args: ['hasConfirmButton']
        }], isOnSearchEnabled: [{
            type: Input,
            args: ['isOnSearchEnabled']
        }], canClear: [{
            type: HostBinding,
            args: ['class.ionic-selectable-can-clear']
        }, {
            type: Input,
            args: ['canClear']
        }], isMultiple: [{
            type: Input,
            args: ['isMultiple']
        }], canAddItem: [{
            type: Input,
            args: ['canAddItem']
        }], _isIos: [{
            type: HostBinding,
            args: ['class.ionic-selectable-ios']
        }], _isMD: [{
            type: HostBinding,
            args: ['class.ionic-selectable-md']
        }], valueTemplate: [{
            type: ContentChild,
            args: [IonicSelectableValueTemplateDirective, { read: TemplateRef }]
        }], itemTemplate: [{
            type: ContentChild,
            args: [IonicSelectableItemTemplateDirective, { read: TemplateRef }]
        }], itemEndTemplate: [{
            type: ContentChild,
            args: [IonicSelectableItemEndTemplateDirective, { read: TemplateRef }]
        }], titleTemplate: [{
            type: ContentChild,
            args: [IonicSelectableTitleTemplateDirective, { read: TemplateRef }]
        }], placeholderTemplate: [{
            type: ContentChild,
            args: [IonicSelectablePlaceholderTemplateDirective, { read: TemplateRef }]
        }], messageTemplate: [{
            type: ContentChild,
            args: [IonicSelectableMessageTemplateDirective, { read: TemplateRef }]
        }], groupTemplate: [{
            type: ContentChild,
            args: [IonicSelectableGroupTemplateDirective, { read: TemplateRef }]
        }], groupEndTemplate: [{
            type: ContentChild,
            args: [IonicSelectableGroupEndTemplateDirective, { read: TemplateRef }]
        }], closeButtonTemplate: [{
            type: ContentChild,
            args: [IonicSelectableCloseButtonTemplateDirective, { read: TemplateRef }]
        }], searchFailTemplate: [{
            type: ContentChild,
            args: [IonicSelectableSearchFailTemplateDirective, { read: TemplateRef }]
        }], addItemTemplate: [{
            type: ContentChild,
            args: [IonicSelectableAddItemTemplateDirective, { read: TemplateRef }]
        }], footerTemplate: [{
            type: ContentChild,
            args: [IonicSelectableFooterTemplateDirective, { read: TemplateRef }]
        }], headerTemplate: [{
            type: ContentChild,
            args: [IonicSelectableHeaderTemplateDirective, { read: TemplateRef }]
        }], itemIconTemplate: [{
            type: ContentChild,
            args: [IonicSelectableItemIconTemplateDirective, { read: TemplateRef }]
        }], iconTemplate: [{
            type: ContentChild,
            args: [IonicSelectableIconTemplateDirective, { read: TemplateRef }]
        }] }); })();
if (false) {
    /** @type {?} */
    IonicSelectableComponent.prototype._cssClass;
    /** @type {?} */
    IonicSelectableComponent.prototype._isIos;
    /** @type {?} */
    IonicSelectableComponent.prototype._isMD;
    /**
     * @type {?}
     * @private
     */
    IonicSelectableComponent.prototype._isOnSearchEnabled;
    /**
     * @type {?}
     * @private
     */
    IonicSelectableComponent.prototype._isEnabled;
    /**
     * @type {?}
     * @private
     */
    IonicSelectableComponent.prototype._shouldBackdropClose;
    /**
     * @type {?}
     * @private
     */
    IonicSelectableComponent.prototype._isOpened;
    /**
     * @type {?}
     * @private
     */
    IonicSelectableComponent.prototype._value;
    /**
     * @type {?}
     * @private
     */
    IonicSelectableComponent.prototype._modal;
    /**
     * @type {?}
     * @private
     */
    IonicSelectableComponent.prototype._itemsDiffer;
    /**
     * @type {?}
     * @private
     */
    IonicSelectableComponent.prototype._hasObjects;
    /**
     * @type {?}
     * @private
     */
    IonicSelectableComponent.prototype._canClear;
    /**
     * @type {?}
     * @private
     */
    IonicSelectableComponent.prototype._hasConfirmButton;
    /**
     * @type {?}
     * @private
     */
    IonicSelectableComponent.prototype._isMultiple;
    /**
     * @type {?}
     * @private
     */
    IonicSelectableComponent.prototype._canAddItem;
    /**
     * @type {?}
     * @private
     */
    IonicSelectableComponent.prototype._addItemObservable;
    /**
     * @type {?}
     * @private
     */
    IonicSelectableComponent.prototype._deleteItemObservable;
    /**
     * @type {?}
     * @private
     */
    IonicSelectableComponent.prototype.onItemsChange;
    /**
     * @type {?}
     * @private
     */
    IonicSelectableComponent.prototype._ionItemElement;
    /**
     * @type {?}
     * @private
     */
    IonicSelectableComponent.prototype._ionLabelElement;
    /**
     * @type {?}
     * @private
     */
    IonicSelectableComponent.prototype._hasIonLabel;
    /**
     * @type {?}
     * @private
     */
    IonicSelectableComponent.prototype._ionLabelPosition;
    /**
     * @type {?}
     * @private
     */
    IonicSelectableComponent.prototype._label;
    /** @type {?} */
    IonicSelectableComponent.prototype._valueItems;
    /** @type {?} */
    IonicSelectableComponent.prototype._searchText;
    /** @type {?} */
    IonicSelectableComponent.prototype._hasSearchText;
    /** @type {?} */
    IonicSelectableComponent.prototype._groups;
    /** @type {?} */
    IonicSelectableComponent.prototype._itemsToConfirm;
    /** @type {?} */
    IonicSelectableComponent.prototype._selectedItems;
    /** @type {?} */
    IonicSelectableComponent.prototype._modalComponent;
    /** @type {?} */
    IonicSelectableComponent.prototype._filteredGroups;
    /** @type {?} */
    IonicSelectableComponent.prototype._hasGroups;
    /** @type {?} */
    IonicSelectableComponent.prototype._isSearching;
    /** @type {?} */
    IonicSelectableComponent.prototype._hasPlaceholder;
    /** @type {?} */
    IonicSelectableComponent.prototype._isAddItemTemplateVisible;
    /** @type {?} */
    IonicSelectableComponent.prototype._isFooterVisible;
    /** @type {?} */
    IonicSelectableComponent.prototype._itemToAdd;
    /** @type {?} */
    IonicSelectableComponent.prototype._footerButtonsCount;
    /** @type {?} */
    IonicSelectableComponent.prototype._hasFilteredItems;
    /**
     * A list of items.
     * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#items).
     *
     * \@default []
     * \@memberof IonicSelectableComponent
     * @type {?}
     */
    IonicSelectableComponent.prototype.items;
    /** @type {?} */
    IonicSelectableComponent.prototype.itemsChange;
    /**
     * Modal CSS class.
     * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#modalcssclass).
     *
     * \@default null
     * \@memberof IonicSelectableComponent
     * @type {?}
     */
    IonicSelectableComponent.prototype.modalCssClass;
    /**
     * Modal enter animation.
     * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#modalenteranimation).
     *
     * \@default null
     * \@memberof IonicSelectableComponent
     * @type {?}
     */
    IonicSelectableComponent.prototype.modalEnterAnimation;
    /**
     * Modal leave animation.
     * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#modalleaveanimation).
     *
     * \@default null
     * \@memberof IonicSelectableComponent
     * @type {?}
     */
    IonicSelectableComponent.prototype.modalLeaveAnimation;
    /**
     * Determines whether Confirm button is enabled.
     * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#isconfirmbuttonenabled).
     *
     * \@default true
     * \@memberof IonicSelectableComponent
     * @type {?}
     */
    IonicSelectableComponent.prototype.isConfirmButtonEnabled;
    /**
     * Item property to use as a unique identifier, e.g, `'id'`.
     * **Note**: `items` should be an object array.
     * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#itemvaluefield).
     *
     * \@default null
     * \@memberof IonicSelectableComponent
     * @type {?}
     */
    IonicSelectableComponent.prototype.itemValueField;
    /**
     * Item property to display, e.g, `'name'`.
     * **Note**: `items` should be an object array.
     * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#itemtextfield).
     *
     * \@default false
     * \@memberof IonicSelectableComponent
     * @type {?}
     */
    IonicSelectableComponent.prototype.itemTextField;
    /**
     *
     * Group property to use as a unique identifier to group items, e.g. `'country.id'`.
     * **Note**: `items` should be an object array.
     * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#groupvaluefield).
     *
     * \@default null
     * \@memberof IonicSelectableComponent
     * @type {?}
     */
    IonicSelectableComponent.prototype.groupValueField;
    /**
     * Group property to display, e.g. `'country.name'`.
     * **Note**: `items` should be an object array.
     * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#grouptextfield).
     *
     * \@default null
     * \@memberof IonicSelectableComponent
     * @type {?}
     */
    IonicSelectableComponent.prototype.groupTextField;
    /**
     * Determines whether to show Searchbar.
     * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#cansearch).
     *
     * \@default false
     * \@memberof IonicSelectableComponent
     * @type {?}
     */
    IonicSelectableComponent.prototype.canSearch;
    /**
     * Determines whether Ionic [InfiniteScroll](https://ionicframework.com/docs/api/components/infinite-scroll/InfiniteScroll/) is enabled.
     * **Note**: Infinite scroll cannot be used together with virtual scroll.
     * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#hasinfinitescroll).
     *
     * \@default false
     * \@memberof IonicSelectableComponent
     * @type {?}
     */
    IonicSelectableComponent.prototype.hasInfiniteScroll;
    /**
     * Determines whether Ionic [VirtualScroll](https://ionicframework.com/docs/api/components/virtual-scroll/VirtualScroll/) is enabled.
     * **Note**: Virtual scroll cannot be used together with infinite scroll.
     * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#hasvirtualscroll).
     *
     * \@default false
     * \@memberof IonicSelectableComponent
     * @type {?}
     */
    IonicSelectableComponent.prototype.hasVirtualScroll;
    /**
     * See Ionic VirtualScroll [approxItemHeight](https://ionicframework.com/docs/api/components/virtual-scroll/VirtualScroll/).
     * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#virtualscrollapproxitemheight).
     *
     * \@default '40px'
     * \@memberof IonicSelectableComponent
     * @type {?}
     */
    IonicSelectableComponent.prototype.virtualScrollApproxItemHeight;
    /**
     * A placeholder for Searchbar.
     * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#searchplaceholder).
     *
     * \@default 'Search'
     * \@memberof IonicSelectableComponent
     * @type {?}
     */
    IonicSelectableComponent.prototype.searchPlaceholder;
    /**
     * A placeholder.
     * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#placeholder).
     *
     * \@default null
     * \@memberof IonicSelectableComponent
     * @type {?}
     */
    IonicSelectableComponent.prototype.placeholder;
    /**
     * Text to display when no items have been found during search.
     * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#searchfailtext).
     *
     * \@default 'No items found.'
     * \@memberof IonicSelectableComponent
     * @type {?}
     */
    IonicSelectableComponent.prototype.searchFailText;
    /**
     * Clear button text.
     * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#clearbuttontext).
     *
     * \@default 'Clear'
     * \@memberof IonicSelectableComponent
     * @type {?}
     */
    IonicSelectableComponent.prototype.clearButtonText;
    /**
     * Add button text.
     * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#addbuttontext).
     *
     * \@default 'Add'
     * \@memberof IonicSelectableComponent
     * @type {?}
     */
    IonicSelectableComponent.prototype.addButtonText;
    /**
     * Confirm button text.
     * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#confirmbuttontext).
     *
     * \@default 'OK'
     * \@memberof IonicSelectableComponent
     * @type {?}
     */
    IonicSelectableComponent.prototype.confirmButtonText;
    /**
     * Close button text.
     * The field is only applicable to **iOS** platform, on **Android** only Cross icon is displayed.
     * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#closebuttontext).
     *
     * \@default 'Cancel'
     * \@memberof IonicSelectableComponent
     * @type {?}
     */
    IonicSelectableComponent.prototype.closeButtonText;
    /**
     * Determines whether Searchbar should receive focus when Modal is opened.
     * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#shouldfocussearchbar).
     *
     * \@default false
     * \@memberof IonicSelectableComponent
     * @type {?}
     */
    IonicSelectableComponent.prototype.shouldFocusSearchbar;
    /**
     * Header color. [Ionic colors](https://ionicframework.com/docs/theming/advanced#colors) are supported.
     * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#headercolor).
     *
     * \@default null
     * \@memberof IonicSelectableComponent
     * @type {?}
     */
    IonicSelectableComponent.prototype.headerColor;
    /**
     * Group color. [Ionic colors](https://ionicframework.com/docs/theming/advanced#colors) are supported.
     * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#groupcolor).
     *
     * \@default null
     * \@memberof IonicSelectableComponent
     * @type {?}
     */
    IonicSelectableComponent.prototype.groupColor;
    /**
     * Close button slot. [Ionic slots](https://ionicframework.com/docs/api/buttons) are supported.
     * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#closebuttonslot).
     *
     * \@default 'start'
     * \@memberof IonicSelectableComponent
     * @type {?}
     */
    IonicSelectableComponent.prototype.closeButtonSlot;
    /**
     * Item icon slot. [Ionic slots](https://ionicframework.com/docs/api/item) are supported.
     * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#itemiconslot).
     *
     * \@default 'start'
     * \@memberof IonicSelectableComponent
     * @type {?}
     */
    IonicSelectableComponent.prototype.itemIconSlot;
    /**
     * Fires when item/s has been selected and Modal closed.
     * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#onchange).
     *
     * \@memberof IonicSelectableComponent
     * @type {?}
     */
    IonicSelectableComponent.prototype.onChange;
    /**
     * Fires when the user is typing in Searchbar.
     * **Note**: `canSearch` and `isOnSearchEnabled` has to be enabled.
     * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#onsearch).
     *
     * \@memberof IonicSelectableComponent
     * @type {?}
     */
    IonicSelectableComponent.prototype.onSearch;
    /**
     * Fires when no items have been found.
     * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#onsearchfail).
     *
     * \@memberof IonicSelectableComponent
     * @type {?}
     */
    IonicSelectableComponent.prototype.onSearchFail;
    /**
     * Fires when some items have been found.
     * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#onsearchsuccess).
     *
     * \@memberof IonicSelectableComponent
     * @type {?}
     */
    IonicSelectableComponent.prototype.onSearchSuccess;
    /**
     * Fires when the user has scrolled to the end of the list.
     * **Note**: `hasInfiniteScroll` has to be enabled.
     * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#oninfinitescroll).
     *
     * \@memberof IonicSelectableComponent
     * @type {?}
     */
    IonicSelectableComponent.prototype.onInfiniteScroll;
    /**
     * Fires when Modal has been opened.
     * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#onopen).
     *
     * \@memberof IonicSelectableComponent
     * @type {?}
     */
    IonicSelectableComponent.prototype.onOpen;
    /**
     * Fires when Modal has been closed.
     * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#onclose).
     *
     * \@memberof IonicSelectableComponent
     * @type {?}
     */
    IonicSelectableComponent.prototype.onClose;
    /**
     * Fires when an item has been selected or unselected.
     * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#onselect).
     *
     * \@memberof IonicSelectableComponent
     * @type {?}
     */
    IonicSelectableComponent.prototype.onSelect;
    /**
     * Fires when Clear button has been clicked.
     * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#onclear).
     *
     * \@memberof IonicSelectableComponent
     * @type {?}
     */
    IonicSelectableComponent.prototype.onClear;
    /**
     * How long, in milliseconds, to wait to filter items or to trigger `onSearch` event after each keystroke.
     * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#searchdebounce).
     *
     * \@default 250
     * \@memberof IonicSelectableComponent
     * @type {?}
     */
    IonicSelectableComponent.prototype.searchDebounce;
    /**
     * A list of items to disable.
     * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#disableditems).
     *
     * \@default []
     * \@memberof IonicSelectableComponent
     * @type {?}
     */
    IonicSelectableComponent.prototype.disabledItems;
    /**
     * Determines whether item value only should be stored in `ngModel`, not the entire item.
     * **Note**: Item value is defined by `itemValueField`.
     * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#shouldstoreitemvalue).
     *
     * \@default false
     * \@memberof IonicSelectableComponent
     * @type {?}
     */
    IonicSelectableComponent.prototype.shouldStoreItemValue;
    /**
     * Determines whether to allow editing items.
     * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#cansaveitem).
     *
     * \@default false
     * \@memberof IonicSelectableComponent
     * @type {?}
     */
    IonicSelectableComponent.prototype.canSaveItem;
    /**
     * Determines whether to allow deleting items.
     * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#candeleteitem).
     *
     * \@default false
     * \@memberof IonicSelectableComponent
     * @type {?}
     */
    IonicSelectableComponent.prototype.canDeleteItem;
    /**
     * Fires when Edit item button has been clicked.
     * When the button has been clicked `ionicSelectableAddItemTemplate` will be shown. Use the template to create a form to edit item.
     * **Note**: `canSaveItem` has to be enabled.
     * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#onsaveitem).
     *
     * \@memberof IonicSelectableComponent
     * @type {?}
     */
    IonicSelectableComponent.prototype.onSaveItem;
    /**
     * Fires when Delete item button has been clicked.
     * **Note**: `canDeleteItem` has to be enabled.
     * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#ondeleteitem).
     *
     * \@memberof IonicSelectableComponent
     * @type {?}
     */
    IonicSelectableComponent.prototype.onDeleteItem;
    /**
     * Fires when Add item button has been clicked.
     * When the button has been clicked `ionicSelectableAddItemTemplate` will be shown. Use the template to create a form to add item.
     * **Note**: `canAddItem` has to be enabled.
     * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#onadditem).
     *
     * \@memberof IonicSelectableComponent
     * @type {?}
     */
    IonicSelectableComponent.prototype.onAddItem;
    /** @type {?} */
    IonicSelectableComponent.prototype.valueTemplate;
    /** @type {?} */
    IonicSelectableComponent.prototype.itemTemplate;
    /** @type {?} */
    IonicSelectableComponent.prototype.itemEndTemplate;
    /** @type {?} */
    IonicSelectableComponent.prototype.titleTemplate;
    /** @type {?} */
    IonicSelectableComponent.prototype.placeholderTemplate;
    /** @type {?} */
    IonicSelectableComponent.prototype.messageTemplate;
    /** @type {?} */
    IonicSelectableComponent.prototype.groupTemplate;
    /** @type {?} */
    IonicSelectableComponent.prototype.groupEndTemplate;
    /** @type {?} */
    IonicSelectableComponent.prototype.closeButtonTemplate;
    /** @type {?} */
    IonicSelectableComponent.prototype.searchFailTemplate;
    /** @type {?} */
    IonicSelectableComponent.prototype.addItemTemplate;
    /** @type {?} */
    IonicSelectableComponent.prototype.footerTemplate;
    /** @type {?} */
    IonicSelectableComponent.prototype._addItemTemplateFooterHeight;
    /** @type {?} */
    IonicSelectableComponent.prototype.headerTemplate;
    /** @type {?} */
    IonicSelectableComponent.prototype.itemIconTemplate;
    /** @type {?} */
    IonicSelectableComponent.prototype.iconTemplate;
    /**
     * See Ionic VirtualScroll [headerFn](https://ionicframework.com/docs/api/components/virtual-scroll/VirtualScroll/).
     * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#virtualscrollheaderfn).
     *
     * \@memberof IonicSelectableComponent
     * @type {?}
     */
    IonicSelectableComponent.prototype.virtualScrollHeaderFn;
    /**
     * @type {?}
     * @private
     */
    IonicSelectableComponent.prototype.propagateOnChange;
    /**
     * @type {?}
     * @private
     */
    IonicSelectableComponent.prototype.propagateOnTouched;
    /**
     * @type {?}
     * @private
     */
    IonicSelectableComponent.prototype._modalController;
    /**
     * @type {?}
     * @private
     */
    IonicSelectableComponent.prototype._platform;
    /**
     * @type {?}
     * @private
     */
    IonicSelectableComponent.prototype.ionItem;
    /**
     * @type {?}
     * @private
     */
    IonicSelectableComponent.prototype._iterableDiffers;
    /**
     * @type {?}
     * @private
     */
    IonicSelectableComponent.prototype._element;
    /**
     * @type {?}
     * @private
     */
    IonicSelectableComponent.prototype._renderer;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,