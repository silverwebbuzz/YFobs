{"version":3,"sources":["webpack:///src/app/customers/edit/edit.page.html","webpack:///src/app/customers/edit/edit-routing.module.ts","webpack:///src/app/customers/edit/edit.module.ts","webpack:///src/app/customers/edit/edit.page.scss","webpack:///src/app/customers/edit/edit.page.ts"],"names":["routes","path","component","EditPageRoutingModule","imports","forChild","exports","EditPageModule","declarations","EditPage","router","navCtrl","statusBar","formBuilder","apiService","api","plt","route","cust_fb","reqData","snapshot","queryParams","refresh","refresher","presentLoading","allApi","pipe","API_TIMEOUT","subscribe","res","statelist","data","state","country","countries","loadData","NetworkStatus","target","complete","dismissLoading","err","presentToastWithOptions","e","filter","x","country_id","detail","value","currency","id","country_name","currency_code","custData","patchValue","currency_name","getCustomer","customerdata","customerdetails","selectedcountry","selectedstate","name","email","phone","address","city","postal_code","cus_number","vat_code","setTimeout","ready","then","countryData","show","styleDefault","backgroundColorByHexString","back","group","required","v","controls","markAsTouched","valid","body","businessId","getBusinessId","Post","customer_process","status","navigate","selector","template"],"mappings":"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","file":"customers-edit-edit-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>Edit Customer</ion-title>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-button (click)=\\\"goBack()\\\">\\n        <ion-icon name=\\\"arrow-back\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n\\n  <form [formGroup]=\\\"custData\\\" class=\\\"form_\\\">\\n\\n    <ion-item no-padding lines=\\\"none\\\" class=\\\"items_ shadow_input\\\">\\n      <ion-input type=\\\"text\\\" placeholder=\\\"Customer Name\\\" formControlName=\\\"name\\\" class=\\\"input_\\\"></ion-input>\\n    </ion-item>\\n\\n    <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\n      *ngIf=\\\"custData.controls.name.hasError('required') && custData.controls.name.touched\\\">\\n      <p class=\\\"content\\\">Please Enter Customer Name!</p>\\n    </ion-item>\\n\\n    <ion-item no-padding lines=\\\"none\\\" class=\\\"items_ shadow_input\\\">\\n      <ion-input type=\\\"email\\\" placeholder=\\\"Email\\\" formControlName=\\\"email\\\" class=\\\"input_\\\"></ion-input>\\n    </ion-item>\\n\\n    <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\n      *ngIf=\\\"custData.controls.email.hasError('required') && custData.controls.email.touched\\\">\\n      <p class=\\\"content\\\">Please Enter Email!</p>\\n    </ion-item>\\n\\n    <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\n      *ngIf=\\\"custData.controls.email.hasError('pattern') && custData.controls.email.touched\\\">\\n      <p class=\\\"content\\\">Please Enter Valid Email!</p>\\n    </ion-item>\\n\\n    <ion-item no-padding lines=\\\"none\\\" class=\\\"items_ shadow_input\\\">\\n      <ion-input type=\\\"tel\\\" placeholder=\\\"Phone Number\\\" formControlName=\\\"phone\\\" class=\\\"input_\\\">\\n      </ion-input>\\n    </ion-item>\\n\\n    <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\n      *ngIf=\\\"custData.controls.phone.hasError('required') && custData.controls.phone.touched\\\">\\n      <p class=\\\"content\\\">Please Enter Phone number!</p>\\n    </ion-item>\\n\\n    <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\n      *ngIf=\\\"!custData.get('phone').errors?.pattern && custData.get('phone').errors?.minlength && custData.get('phone').touched\\\">\\n      <p class=\\\"content\\\">Please Enter Valid Phone number!</p>\\n    </ion-item>\\n\\n    <ion-item no-padding lines=\\\"none\\\" class=\\\"items_ shadow_input\\\">\\n      <ion-input type=\\\"text\\\" placeholder=\\\"Address\\\" formControlName=\\\"address\\\" class=\\\"input_\\\"></ion-input>\\n    </ion-item>\\n\\n    <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\n      *ngIf=\\\"custData.controls.address.hasError('required') && custData.controls.address.touched\\\">\\n      <p class=\\\"content\\\">Please Enter Address!</p>\\n    </ion-item>\\n\\n\\n    <ion-item no-padding lines=\\\"none\\\" class=\\\"items_ shadow_input\\\">\\n      <ion-select interface=\\\"action-sheet\\\" placeholder=\\\"Country\\\" formControlName=\\\"country\\\" class=\\\"dropWidth_\\\" mode=\\\"md\\\"\\n        [(ngModel)]=\\\"selectedcountry\\\" (ionChange)=\\\"stateList($event)\\\">\\n        <ion-select-option *ngFor=\\\"let opt of country\\\" [value]=\\\"opt.id\\\">{{opt.name}}</ion-select-option>\\n      </ion-select>\\n    </ion-item>\\n\\n    <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\n      *ngIf=\\\"custData.controls.country.hasError('required') && custData.controls.country.touched\\\">\\n      <p class=\\\"content\\\">Please Select Country!</p>\\n    </ion-item>\\n\\n    <div *ngIf=\\\"country_name == 'INR'\\\">\\n      <ion-item no-padding lines=\\\"none\\\" class=\\\"items_ shadow_input\\\">\\n        <ion-select interface=\\\"action-sheet\\\" placeholder=\\\"State\\\" formControlName=\\\"state\\\" class=\\\"dropWidth_\\\" mode=\\\"md\\\"\\n          [(ngModel)]=\\\"selectedstate\\\">\\n          <ion-select-option *ngFor=\\\"let opt of state\\\" [value]=\\\"opt.id\\\">{{opt.name}}</ion-select-option>\\n        </ion-select>\\n      </ion-item>\\n\\n      <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\n        *ngIf=\\\"custData.controls.state.hasError('required') && custData.controls.state.touched\\\">\\n        <p class=\\\"content\\\">Please Select State!</p>\\n      </ion-item>\\n    </div>\\n\\n    <ion-item no-padding lines=\\\"none\\\" class=\\\"items_ shadow_input\\\">\\n      <ion-input placeholder=\\\"City\\\" formControlName=\\\"city\\\" class=\\\"input_\\\"></ion-input>\\n    </ion-item>\\n\\n    <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\n      *ngIf=\\\"custData.controls.city.hasError('required') && custData.controls.city.touched\\\">\\n      <p class=\\\"content\\\">Please Enter City!</p>\\n    </ion-item>\\n\\n    <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\n      *ngIf=\\\"!custData.controls.city.hasError('required') && custData.controls.city.touched && custData.controls.city.hasError('pattern')\\\">\\n      <p class=\\\"content\\\">Please Enter Only Characters!</p>\\n    </ion-item>\\n\\n    <ion-item no-padding lines=\\\"none\\\" class=\\\"items_ shadow_input\\\">\\n      <ion-input type=\\\"tel\\\" placeholder=\\\"Post Code\\\" formControlName=\\\"postal_code\\\" class=\\\"input_\\\">\\n      </ion-input>\\n    </ion-item>\\n\\n    <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\n      *ngIf=\\\"custData.controls.postal_code.hasError('required') && custData.controls.postal_code.touched\\\">\\n      <p class=\\\"content\\\">Please Enter Post Code!</p>\\n    </ion-item>\\n\\n    <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\n      *ngIf=\\\"!custData.get('postal_code').errors?.pattern && custData.get('postal_code').errors?.minlength && custData.get('postal_code').touched\\\">\\n      <p class=\\\"content\\\">Please Enter 6 Digits Post Code!</p>\\n    </ion-item>\\n\\n    <!-- <ion-item no-padding lines=\\\"none\\\" class=\\\"items_ shadow_input\\\">\\n      <ion-select interface=\\\"action-sheet\\\" placeholder=\\\"Currency\\\" formControlName=\\\"currency\\\"\\n        class=\\\"dropWidth_\\\" mode=\\\"md\\\" [(ngModel)]=\\\"selectedcurrency\\\">\\n        <ion-select-option *ngFor=\\\"let opt of currency\\\" [value]=\\\"opt.currency_code\\\">{{opt.currency_code}} - {{opt.currency_name}}</ion-select-option>\\n      </ion-select>\\n    </ion-item> -->\\n\\n    <ion-item no-padding lines=\\\"none\\\" class=\\\"items_ shadow_input\\\">\\n      <ion-input type=\\\"text\\\" placeholder=\\\"Currency\\\" formControlName=\\\"currency\\\" class=\\\"input_\\\" readonly=\\\"true\\\">\\n      </ion-input>\\n    </ion-item>\\n\\n    <!-- <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\n      *ngIf=\\\"custData.controls.currency.hasError('required') && custData.controls.currency.touched\\\">\\n      <p class=\\\"content\\\">Please Select Currency!</p>\\n    </ion-item> -->\\n\\n    <ion-item no-padding lines=\\\"none\\\" class=\\\"items_ shadow_input\\\">\\n      <ion-input type=\\\"text\\\" placeholder=\\\"Business Number\\\" formControlName=\\\"cus_number\\\" class=\\\"input_\\\">\\n      </ion-input>\\n    </ion-item>\\n\\n    <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\n      *ngIf=\\\"custData.controls.cus_number.hasError('required') && custData.controls.cus_number.touched\\\">\\n      <p class=\\\"content\\\">Please Enter Business Number!</p>\\n    </ion-item>\\n\\n    <ion-item no-padding lines=\\\"none\\\" class=\\\"items_ shadow_input\\\">\\n      <ion-input type=\\\"text\\\" minlength=\\\"15\\\" maxlength=\\\"15\\\" placeholder=\\\"GST Number\\\" formControlName=\\\"vat_code\\\"\\n        class=\\\"input_\\\"></ion-input>\\n    </ion-item>\\n\\n    <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\n      *ngIf=\\\"custData.controls.vat_code.hasError('required') && custData.controls.vat_code.touched\\\">\\n      <p class=\\\"content\\\">Please Enter GST Number!</p>\\n    </ion-item>\\n\\n    <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\n      *ngIf=\\\"!custData.get('vat_code').errors?.pattern && custData.get('vat_code').errors?.minlength && custData.get('vat_code').touched\\\">\\n      <p class=\\\"content\\\">Please Enter Valid GST Number!</p>\\n    </ion-item>\\n\\n  </form>\\n\\n</ion-content>\\n\\n<ion-footer>\\n  <div class=\\\"div_btn\\\">\\n    <ion-button expand=\\\"full\\\" size=\\\"large\\\" class=\\\"btn_ shadow_btn\\\" (click)=\\\"save()\\\">Save\\n    </ion-button>\\n  </div>\\n</ion-footer>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { EditPage } from './edit.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: EditPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class EditPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { EditPageRoutingModule } from './edit-routing.module';\n\nimport { EditPage } from './edit.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    EditPageRoutingModule\n  ],\n  declarations: [EditPage]\n})\nexport class EditPageModule {}\n","export default \"ion-content {\\n  --padding-bottom: 16px;\\n  --keyboard-offset: 0px !important;\\n}\\nion-content .form_ {\\n  margin: 0px 0px;\\n  position: relative;\\n}\\nion-content .form_ .items_ {\\n  --background: var(--ion-color-light);\\n  width: 84%;\\n  border-radius: 24px;\\n  margin: 0 auto;\\n  --padding-start: 24px;\\n  --inner-padding-end: 12px;\\n  margin-top: 16px !important;\\n}\\nion-content .form_ .items_ .input_ {\\n  font-size: 14px;\\n  color: var(--ion-color-dark);\\n}\\nion-content .form_ .items_ .dropWidth_ {\\n  font-size: 14px;\\n  min-width: 100%;\\n  --padding-start: 0px;\\n  --padding-end: 6px;\\n  --placeholder-opacity: 0.5;\\n}\\nion-footer .div_btn {\\n  margin: 0px 0px 0px 0px;\\n}\\nion-footer .div_btn .btn_ {\\n  margin: 0;\\n  font-size: 14px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY3VzdG9tZXJzL2VkaXQvZWRpdC5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxzQkFBQTtFQUNFLGlDQUFBO0FBQ0o7QUFBSTtFQUNFLGVBQUE7RUFDQSxrQkFBQTtBQUVOO0FBRE07RUFDRSxvQ0FBQTtFQUNBLFVBQUE7RUFDQSxtQkFBQTtFQUNBLGNBQUE7RUFDQSxxQkFBQTtFQUNBLHlCQUFBO0VBQ0EsMkJBQUE7QUFHUjtBQUZRO0VBQ0UsZUFBQTtFQUNBLDRCQUFBO0FBSVY7QUFGUTtFQUNFLGVBQUE7RUFDQSxlQUFBO0VBQ0Esb0JBQUE7RUFDQSxrQkFBQTtFQUNBLDBCQUFBO0FBSVY7QUFFSTtFQUNFLHVCQUFBO0FBQ047QUFBTTtFQUNFLFNBQUE7RUFDQSxlQUFBO0FBRVIiLCJmaWxlIjoic3JjL2FwcC9jdXN0b21lcnMvZWRpdC9lZGl0LnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImlvbi1jb250ZW50IHtcbiAgLS1wYWRkaW5nLWJvdHRvbTogMTZweDtcbiAgICAtLWtleWJvYXJkLW9mZnNldDogMHB4ICFpbXBvcnRhbnQ7XG4gICAgLmZvcm1fIHtcbiAgICAgIG1hcmdpbjogMHB4IDBweDtcbiAgICAgIHBvc2l0aW9uOnJlbGF0aXZlO1xuICAgICAgLml0ZW1zXyB7XG4gICAgICAgIC0tYmFja2dyb3VuZDogdmFyKC0taW9uLWNvbG9yLWxpZ2h0KTtcbiAgICAgICAgd2lkdGg6IDg0JTtcbiAgICAgICAgYm9yZGVyLXJhZGl1czogMjRweDtcbiAgICAgICAgbWFyZ2luOiAwIGF1dG87XG4gICAgICAgIC0tcGFkZGluZy1zdGFydDogMjRweDtcbiAgICAgICAgLS1pbm5lci1wYWRkaW5nLWVuZDogMTJweDtcbiAgICAgICAgbWFyZ2luLXRvcDogMTZweCAhaW1wb3J0YW50O1xuICAgICAgICAuaW5wdXRfe1xuICAgICAgICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICAgICAgICBjb2xvcjogdmFyKC0taW9uLWNvbG9yLWRhcmspO1xuICAgICAgICB9XG4gICAgICAgIC5kcm9wV2lkdGhfIHtcbiAgICAgICAgICBmb250LXNpemU6IDE0cHg7XG4gICAgICAgICAgbWluLXdpZHRoOiAxMDAlO1xuICAgICAgICAgIC0tcGFkZGluZy1zdGFydDogMHB4O1xuICAgICAgICAgIC0tcGFkZGluZy1lbmQ6IDZweDtcbiAgICAgICAgICAtLXBsYWNlaG9sZGVyLW9wYWNpdHk6IDAuNTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxuICBpb24tZm9vdGVye1xuICAgIC5kaXZfYnRuIHtcbiAgICAgIG1hcmdpbjogMHB4IDBweCAwcHggMHB4O1xuICAgICAgLmJ0bl8ge1xuICAgICAgICBtYXJnaW46IDA7XG4gICAgICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICAgIH1cbiAgICB9XG4gIH0iXX0= */\";","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { NavController, Platform } from '@ionic/angular';\nimport { StatusBar } from '@ionic-native/status-bar/ngx';\nimport { CommonService } from 'src/app/global/common_service';\nimport { ApiService } from 'src/app/services/api.service';\nimport { timeout } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.page.html',\n  styleUrls: ['./edit.page.scss'],\n})\nexport class EditPage implements OnInit {\n\n  custData: FormGroup;\n  customer_process: boolean;\n  reqData: any;\n  customers: any;\n  customerdata: any;\n  state: any;\n  selectedstate: any;\n  country: any;\n  statelist: any;\n  currency: any;\n  selectedcountry: any;\n  selectedcurrency: any;\n  country_name: any;\n\n  constructor(\n    private router: Router,\n    private navCtrl: NavController,\n    private statusBar: StatusBar,\n    private formBuilder: FormBuilder,\n    public apiService: ApiService,\n    private api: CommonService,\n    private plt: Platform,\n    private route: ActivatedRoute\n  ) {\n    this.cust_fb();\n  }\n\n  ngOnInit() {\n\n    this.reqData = this.route.snapshot.queryParams;\n  }\n\n  countryData(refresh = false, refresher?) {\n    this.api.presentLoading();\n    this.apiService.allApi(refresh).pipe(timeout(this.api.API_TIMEOUT)).subscribe(res => {\n      this.statelist = res.data.state\n      this.country = res.data.countries\n      this.loadData(this.api.NetworkStatus);\n      if (refresher) {\n        refresher.target.complete();\n      }\n      this.api.dismissLoading();\n    },\n      err => {\n        this.api.dismissLoading();\n        this.api.presentToastWithOptions(\"Internal Server Error Please try again after sometime.\");\n      });\n  }\n\n\n  stateList(e) {\n    this.state = this.statelist.filter(x => x.country_id == e.detail.value)\n    this.currency = this.country.filter(x => x.id == e.detail.value)\n    this.country_name = this.currency[0].currency_code\n    this.custData.patchValue({\n      currency: this.currency[0].currency_code + '-' + this.currency[0].currency_name,\n    });\n  }\n\n  loadData(refresh = false, refresher?) {\n    this.apiService.getCustomer(refresh).pipe(timeout(this.api.API_TIMEOUT)).subscribe(res => {\n      if (res.data) {\n        let customerdata = res.data.filter((x) => x.id == this.reqData.id);\n        let customerdetails = customerdata[0]\n        this.selectedcountry = customerdetails.country\n        this.state = this.statelist.filter(x => x.country_id == customerdetails.country)\n        this.selectedstate = customerdetails.state\n        this.currency = this.country.filter(x => x.id == customerdetails.country)\n        this.country_name = this.currency[0].currency_code\n        // this.selectedcurrency = this.currency[0].currency_code\n        this.custData.patchValue({\n          name: customerdetails.name,\n          email: customerdetails.email,\n          phone: customerdetails.phone,\n          address: customerdetails.address,\n          country: customerdetails.country,\n          city: customerdetails.city,\n          postal_code: customerdetails.postal_code,\n          cus_number: customerdetails.cus_number,\n          vat_code: customerdetails.vat_code,\n          currency: this.currency[0].currency_code + '-' + this.currency[0].currency_name,\n        });\n        setTimeout(() => {\n\n        }, 1000);\n      }\n      this.api.dismissLoading();\n    },\n      err => {\n        this.api.dismissLoading();\n        this.api.presentToastWithOptions(\"Internal Server Error Please try again after sometime.\");\n      }\n    );\n  }\n\n  ionViewWillEnter() {\n    this.plt.ready().then(() => {\n      this.countryData(this.api.NetworkStatus);\n    });\n    this.statusBar.show();\n    this.statusBar.styleDefault();\n    this.statusBar.backgroundColorByHexString('#FFF');\n  }\n\n  goBack() {\n    this.navCtrl.back();\n  }\n\n  cust_fb() {\n    this.custData = this.formBuilder.group({\n      name: ['', Validators.required],\n      email: ['', Validators.required],\n      phone: [''],\n      address: [''],\n      country: [''],\n      state: [''],\n      city: ['', Validators.required],\n      postal_code: [''],\n      currency: [''],\n      cus_number: [''],\n      vat_code: [''],\n    });\n  }\n\n  save() {\n    for (let v in this.custData.controls) {\n      this.custData.controls[v].markAsTouched();\n    }\n    if (this.custData.valid) {\n      this.api.presentLoading();\n      var body = {\n        name: this.custData.value.name,\n        email: this.custData.value.email,\n        phone: this.custData.value.phone,\n        address: this.custData.value.address,\n        country: this.custData.value.country,\n        state: this.currency[0].currency_code == 'INR' ? this.custData.value.state : '',\n        city: this.custData.value.city,\n        postal_code: this.custData.value.postal_code,\n        currency: this.currency[0].currency_code,\n        // country : this.api.INDIA,\n        cus_number: this.custData.value.cus_number,\n        vat_code: this.custData.value.vat_code,\n        businessId: this.api.getBusinessId(),\n        id: this.reqData.id,\n      };\n      this.api.Post(\"Customer/add\", body).pipe(timeout(this.api.API_TIMEOUT)).subscribe(data => {\n        this.customer_process = false;\n        this.api.dismissLoading();\n        if (data.status == 1) {\n          this.api.presentToastWithOptions(data['message']);\n          this.router.navigate([\"/customers-list\"]);\n        }\n      },\n        err => {\n          this.api.dismissLoading();\n          this.api.presentToastWithOptions(\"Internal Server Error Please try again after sometime.\");\n        }\n      );\n    }\n  }\n}\n"]}